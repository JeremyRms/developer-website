# Add date formatting options.
directive @dateformat(formatString: String, locale: String, fromNow: Boolean, difference: String) on FIELD_DEFINITION

# Link to node by foreign-key relation.
directive @link(by: String! = "id", from: String, on: String) on FIELD_DEFINITION

# Link to File node by relative path.
directive @fileByRelativePath(from: String) on FIELD_DEFINITION

# Proxy resolver from another field.
directive @proxy(from: String!, fromNode: Boolean! = false) on FIELD_DEFINITION

# Infer field types from field values.
directive @infer on OBJECT

# Do not infer field types from field values.
directive @dontInfer on OBJECT

# Define the mime-types handled by this type.
directive @mimeTypes(
  # The mime-types handled by this type.
  types: [String!]! = []
) on OBJECT

# Define parent-child relations between types. This is used to add `child*` and `children*` convenience fields like `childImageSharp`.
directive @childOf(
  # A list of mime-types this type is a child of. Usually these are the mime-types handled by a transformer plugin.
  mimeTypes: [String!]! = []

  # A list of types this type is a child of. Usually these are the types handled by a transformer plugin.
  types: [String!]! = []
) on OBJECT

# DEPRECATED: Use interface inheritance instead, i.e. "interface Foo implements Node".
#
# Adds root query fields for an interface. All implementing types must also implement the Node interface.
directive @nodeInterface on INTERFACE

type File implements Node {
  sourceInstanceName: String!
  absolutePath: String!
  relativePath: String!
  extension: String!
  size: Int!
  prettySize: String!
  modifiedTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  accessTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  changeTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  birthTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  root: String!
  dir: String!
  base: String!
  ext: String!
  name: String!
  relativeDirectory: String!
  dev: Int!
  mode: Int!
  nlink: Int!
  uid: Int!
  gid: Int!
  rdev: Int!
  ino: Float!
  atimeMs: Float!
  mtimeMs: Float!
  ctimeMs: Float!
  atime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  mtime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  ctime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  birthtime: Date @deprecated(reason: "Use `birthTime` instead")
  birthtimeMs: Float @deprecated(reason: "Use `birthTime` instead")
  blksize: Int
  blocks: Int

  # Copy file to static directory and return public url to it
  publicURL: String

  # Returns all children nodes filtered by type ImageSharp
  childrenImageSharp: [ImageSharp]

  # Returns the first child node of type ImageSharp or null if there are no children of given type on this node
  childImageSharp: ImageSharp

  # Returns all children nodes filtered by type Mdx
  childrenMdx: [Mdx]

  # Returns the first child node of type Mdx or null if there are no children of given type on this node
  childMdx: Mdx
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

# Node Interface
interface Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

type Internal {
  content: String
  contentDigest: String!
  description: String
  fieldOwners: [String]
  ignoreType: Boolean
  mediaType: String
  owner: String!
  type: String!
}

# A date string, such as 2007-12-03, compliant with the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
scalar Date

type Directory implements Node {
  sourceInstanceName: String!
  absolutePath: String!
  relativePath: String!
  extension: String!
  size: Int!
  prettySize: String!
  modifiedTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  accessTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  changeTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  birthTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  root: String!
  dir: String!
  base: String!
  ext: String!
  name: String!
  relativeDirectory: String!
  dev: Int!
  mode: Int!
  nlink: Int!
  uid: Int!
  gid: Int!
  rdev: Int!
  ino: Float!
  atimeMs: Float!
  mtimeMs: Float!
  ctimeMs: Float!
  atime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  mtime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  ctime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  birthtime: Date @deprecated(reason: "Use `birthTime` instead")
  birthtimeMs: Float @deprecated(reason: "Use `birthTime` instead")
  blksize: Int
  blocks: Int
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

type Site implements Node {
  buildTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  siteMetadata: SiteSiteMetadata
  port: Int
  host: String
  flags: SiteFlags
  polyfill: Boolean
  pathPrefix: String
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  layout: SiteLayout
}

type SiteFlags {
  DEV_SSR: Boolean
  PRESERVE_WEBPACK_CACHE: Boolean
  PRESERVE_FILE_DOWNLOAD_CACHE: Boolean
}

type SiteSiteMetadata {
  title: String
  description: String
  repository: String
  branch: String!
  contributingUrl: String
  titleTemplate: String
  author: String
  siteUrl: String
}

type SiteFunction implements Node {
  functionRoute: String!
  pluginName: String!
  originalAbsoluteFilePath: String!
  originalRelativeFilePath: String!
  relativeCompiledFilePath: String!
  absoluteCompiledFilePath: String!
  matchPath: String
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

type SitePage implements Node {
  path: String!
  component: String!
  internalComponentName: String!
  componentChunkName: String!
  matchPath: String
  isCreatedByStatefulCreatePages: Boolean
  pluginCreator: SitePlugin
  pluginCreatorId: String
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  context: SitePageContext
}

type SitePageContext {
  layout: String
  themeOptions: SitePageContextThemeOptions
  swiftypeEngineKey: String
  fileRelativePath: String
  locale: String
  slug: String
  guidesFilter: String
}

type SitePageContextThemeOptions {
  oneTrustID: String
  forceTrailingSlashes: Boolean
  layout: SitePageContextThemeOptionsLayout
  prism: SitePageContextThemeOptionsPrism
  splitio: SitePageContextThemeOptionsSplitio
  relatedResources: SitePageContextThemeOptionsRelatedResources
  newrelic: SitePageContextThemeOptionsNewrelic
  tessen: SitePageContextThemeOptionsTessen
}

type SitePageContextThemeOptionsLayout {
  contentPadding: String
  maxWidth: String
  component: String
  mobileBreakpoint: String
}

type SitePageContextThemeOptionsPrism {
  languages: [String]
}

type SitePageContextThemeOptionsSplitio {
  core: SitePageContextThemeOptionsSplitioCore
  features: SitePageContextThemeOptionsSplitioFeatures
  env: SitePageContextThemeOptionsSplitioEnv
}

type SitePageContextThemeOptionsSplitioCore {
  authorizationKey: String
}

type SitePageContextThemeOptionsSplitioFeatures {
  free_account_button_color: SitePageContextThemeOptionsSplitioFeaturesFree_account_button_color
}

type SitePageContextThemeOptionsSplitioFeaturesFree_account_button_color {
  treatment: String
}

type SitePageContextThemeOptionsSplitioEnv {
  development: SitePageContextThemeOptionsSplitioEnvDevelopment
}

type SitePageContextThemeOptionsSplitioEnvDevelopment {
  features: SitePageContextThemeOptionsSplitioEnvDevelopmentFeatures
  core: SitePageContextThemeOptionsSplitioEnvDevelopmentCore
}

type SitePageContextThemeOptionsSplitioEnvDevelopmentFeatures {
  developer_website_global_header_gh_buttons: String
  developer_website_right_rail_buttons: String
  super_tiles: String
}

type SitePageContextThemeOptionsSplitioEnvDevelopmentCore {
  authorizationKey: String
}

type SitePageContextThemeOptionsRelatedResources {
  swiftype: SitePageContextThemeOptionsRelatedResourcesSwiftype
}

type SitePageContextThemeOptionsRelatedResourcesSwiftype {
  resultsPath: String
  refetch: Boolean
  engineKey: String
  limit: Int
}

type SitePageContextThemeOptionsNewrelic {
  configs: SitePageContextThemeOptionsNewrelicConfigs
}

type SitePageContextThemeOptionsNewrelicConfigs {
  production: SitePageContextThemeOptionsNewrelicConfigsProduction
  staging: SitePageContextThemeOptionsNewrelicConfigsStaging
}

type SitePageContextThemeOptionsNewrelicConfigsProduction {
  instrumentationType: String
  accountId: String
  trustKey: String
  agentID: String
  licenseKey: String
  applicationID: String
  beacon: String
  errorBeacon: String
}

type SitePageContextThemeOptionsNewrelicConfigsStaging {
  instrumentationType: String
  accountId: String
  trustKey: String
  agentID: String
  licenseKey: String
  applicationID: String
  beacon: String
  errorBeacon: String
}

type SitePageContextThemeOptionsTessen {
  tessenVersion: String
  product: String
  subproduct: String
  segmentWriteKey: String
  trackPageViews: Boolean
  pageView: SitePageContextThemeOptionsTessenPageView
}

type SitePageContextThemeOptionsTessenPageView {
  eventName: String
  category: String
}

type SitePlugin implements Node {
  resolve: String
  name: String
  version: String
  nodeAPIs: [String]
  browserAPIs: [String]
  ssrAPIs: [String]
  pluginFilepath: String
  pluginOptions: SitePluginPluginOptions
  packageJson: SitePluginPackageJson
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

type SitePluginPluginOptions {
  base64Width: Int
  stripMetadata: Boolean
  defaultQuality: Int
  failOnError: Boolean
  sourceMap: Boolean
  autoLabel: String
  labelFormat: String
  cssPropOptimization: Boolean
  output: String
  createLinkInHead: Boolean
  entryLimit: Int
  query: String
  classNameDark: String
  classNameLight: String
  storageKey: String
  minify: Boolean
  component: String
  name: String
  path: String
  sitemap: String
  policy: [SitePluginPluginOptionsPolicy]
  configs: SitePluginPluginOptionsConfigs
  oneTrustID: String
  forceTrailingSlashes: Boolean
  layout: SitePluginPluginOptionsLayout
  prism: SitePluginPluginOptionsPrism
  splitio: SitePluginPluginOptionsSplitio
  relatedResources: SitePluginPluginOptionsRelatedResources
  newrelic: SitePluginPluginOptionsNewrelic
  tessen: SitePluginPluginOptionsTessen
  implementation: SitePluginPluginOptionsImplementation
  short_name: String
  start_url: String
  background_color: String
  theme_color: String
  display: String
  icon: String
  legacy: Boolean
  theme_color_in_head: Boolean
  cache_busting_mode: String
  crossOrigin: String
  include_favicon: Boolean
  cacheDigest: String
  maxWidth: Int
  linkImagesToOriginal: Boolean
  showCaptions: Boolean
  markdownCaptions: Boolean
  sizeByPixelDensity: Boolean
  backgroundColor: String
  quality: Int
  withWebp: Boolean
  tracedSVG: Boolean
  loading: String
  decoding: String
  disableBgImageOnAlpha: Boolean
  disableBgImage: Boolean
  gatsbyRemarkPlugins: [SitePluginPluginOptionsGatsbyRemarkPlugins]
  extensions: [String]
  lessBabel: Boolean
  mediaTypes: [String]
  root: String
  release: String
  debug: Boolean
  googleAnalytics: SitePluginPluginOptionsGoogleAnalytics
  environments: [String]
  allPageHeaders: [String]
  outputPath: String
  emitSchema: SitePluginPluginOptionsEmitSchema
  isTSX: Boolean
  jsxPragma: String
  allExtensions: Boolean
  pathCheck: Boolean
}

type SitePluginPluginOptionsPolicy {
  userAgent: String
  allow: String
}

type SitePluginPluginOptionsConfigs {
  production: SitePluginPluginOptionsConfigsProduction
  staging: SitePluginPluginOptionsConfigsStaging
}

type SitePluginPluginOptionsConfigsProduction {
  instrumentationType: String
  accountId: String
  trustKey: String
  agentID: String
  licenseKey: String
  applicationID: String
  beacon: String
  errorBeacon: String
}

type SitePluginPluginOptionsConfigsStaging {
  instrumentationType: String
  accountId: String
  trustKey: String
  agentID: String
  licenseKey: String
  applicationID: String
  beacon: String
  errorBeacon: String
}

type SitePluginPluginOptionsLayout {
  contentPadding: String
  maxWidth: String
  component: String
  mobileBreakpoint: String
}

type SitePluginPluginOptionsPrism {
  languages: [String]
}

type SitePluginPluginOptionsSplitio {
  core: SitePluginPluginOptionsSplitioCore
  features: SitePluginPluginOptionsSplitioFeatures
  env: SitePluginPluginOptionsSplitioEnv
}

type SitePluginPluginOptionsSplitioCore {
  authorizationKey: String
}

type SitePluginPluginOptionsSplitioFeatures {
  free_account_button_color: SitePluginPluginOptionsSplitioFeaturesFree_account_button_color
}

type SitePluginPluginOptionsSplitioFeaturesFree_account_button_color {
  treatment: String
}

type SitePluginPluginOptionsSplitioEnv {
  development: SitePluginPluginOptionsSplitioEnvDevelopment
}

type SitePluginPluginOptionsSplitioEnvDevelopment {
  features: SitePluginPluginOptionsSplitioEnvDevelopmentFeatures
  core: SitePluginPluginOptionsSplitioEnvDevelopmentCore
}

type SitePluginPluginOptionsSplitioEnvDevelopmentFeatures {
  developer_website_global_header_gh_buttons: String
  developer_website_right_rail_buttons: String
  super_tiles: String
}

type SitePluginPluginOptionsSplitioEnvDevelopmentCore {
  authorizationKey: String
}

type SitePluginPluginOptionsRelatedResources {
  swiftype: SitePluginPluginOptionsRelatedResourcesSwiftype
}

type SitePluginPluginOptionsRelatedResourcesSwiftype {
  resultsPath: String
  refetch: Boolean
  engineKey: String
  limit: Int
}

type SitePluginPluginOptionsNewrelic {
  configs: SitePluginPluginOptionsNewrelicConfigs
}

type SitePluginPluginOptionsNewrelicConfigs {
  production: SitePluginPluginOptionsNewrelicConfigsProduction
  staging: SitePluginPluginOptionsNewrelicConfigsStaging
}

type SitePluginPluginOptionsNewrelicConfigsProduction {
  instrumentationType: String
  accountId: String
  trustKey: String
  agentID: String
  licenseKey: String
  applicationID: String
  beacon: String
  errorBeacon: String
}

type SitePluginPluginOptionsNewrelicConfigsStaging {
  instrumentationType: String
  accountId: String
  trustKey: String
  agentID: String
  licenseKey: String
  applicationID: String
  beacon: String
  errorBeacon: String
}

type SitePluginPluginOptionsTessen {
  tessenVersion: String
  product: String
  subproduct: String
  segmentWriteKey: String
  trackPageViews: Boolean
  pageView: SitePluginPluginOptionsTessenPageView
}

type SitePluginPluginOptionsTessenPageView {
  eventName: String
  category: String
}

type SitePluginPluginOptionsImplementation {
  info: String
}

type SitePluginPluginOptionsGatsbyRemarkPlugins {
  resolve: String
  options: SitePluginPluginOptionsGatsbyRemarkPluginsOptions
}

type SitePluginPluginOptionsGatsbyRemarkPluginsOptions {
  maxHeight: Int
  maxWidth: Int
  fit: String
  linkImagesToOriginal: Boolean
  icon: String
}

type SitePluginPluginOptionsGoogleAnalytics {
  trackingId: String
  autoStart: Boolean
  anonymize: Boolean
  controlCookieName: String
}

type SitePluginPluginOptionsEmitSchema {
  src___generated___gatsby_schema_graphql: Boolean
}

type SitePluginPackageJson {
  name: String
  description: String
  version: String
  main: String
  license: String
  dependencies: [SitePluginPackageJsonDependencies]
  devDependencies: [SitePluginPackageJsonDevDependencies]
  peerDependencies: [SitePluginPackageJsonPeerDependencies]
  keywords: [String]
}

type SitePluginPackageJsonDependencies {
  name: String
  version: String
}

type SitePluginPackageJsonDevDependencies {
  name: String
  version: String
}

type SitePluginPackageJsonPeerDependencies {
  name: String
  version: String
}

type SiteBuildMetadata implements Node {
  buildTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

enum ImageFormat {
  NO_CHANGE
  AUTO
  JPG
  PNG
  WEBP
  AVIF
}

enum ImageFit {
  COVER
  CONTAIN
  FILL
  INSIDE
  OUTSIDE
}

enum ImageLayout {
  FIXED
  FULL_WIDTH
  CONSTRAINED
}

enum ImageCropFocus {
  CENTER
  NORTH
  NORTHEAST
  EAST
  SOUTHEAST
  SOUTH
  SOUTHWEST
  WEST
  NORTHWEST
  ENTROPY
  ATTENTION
}

input DuotoneGradient {
  highlight: String!
  shadow: String!
  opacity: Int
}

enum PotraceTurnPolicy {
  TURNPOLICY_BLACK
  TURNPOLICY_WHITE
  TURNPOLICY_LEFT
  TURNPOLICY_RIGHT
  TURNPOLICY_MINORITY
  TURNPOLICY_MAJORITY
}

input Potrace {
  turnPolicy: PotraceTurnPolicy
  turdSize: Float
  alphaMax: Float
  optCurve: Boolean
  optTolerance: Float
  threshold: Int
  blackOnWhite: Boolean
  color: String
  background: String
}

type ImageSharp implements Node {
  fixed(width: Int, height: Int, base64Width: Int, jpegProgressive: Boolean = true, pngCompressionSpeed: Int = 4, grayscale: Boolean = false, duotone: DuotoneGradient, traceSVG: Potrace, quality: Int, jpegQuality: Int, pngQuality: Int, webpQuality: Int, toFormat: ImageFormat = AUTO, toFormatBase64: ImageFormat = AUTO, cropFocus: ImageCropFocus = ATTENTION, fit: ImageFit = COVER, background: String = "rgba(0,0,0,1)", rotate: Int = 0, trim: Float = 0): ImageSharpFixed
  fluid(
    maxWidth: Int
    maxHeight: Int
    base64Width: Int
    grayscale: Boolean = false
    jpegProgressive: Boolean = true
    pngCompressionSpeed: Int = 4
    duotone: DuotoneGradient
    traceSVG: Potrace
    quality: Int
    jpegQuality: Int
    pngQuality: Int
    webpQuality: Int
    toFormat: ImageFormat = AUTO
    toFormatBase64: ImageFormat = AUTO
    cropFocus: ImageCropFocus = ATTENTION
    fit: ImageFit = COVER
    background: String = "rgba(0,0,0,1)"
    rotate: Int = 0
    trim: Float = 0
    sizes: String = ""

    # A list of image widths to be generated. Example: [ 200, 340, 520, 890 ]
    srcSetBreakpoints: [Int] = []
  ): ImageSharpFluid
  gatsbyImageData(
    # The layout for the image.
    # FIXED: A static image sized, that does not resize according to the screen width
    # FULL_WIDTH: The image resizes to fit its container. Pass a "sizes" option if it isn't going to be the full width of the screen.
    # CONSTRAINED: Resizes to fit its container, up to a maximum width, at which point it will remain fixed in size.
    layout: ImageLayout = CONSTRAINED

    # The display width of the generated image for layout = FIXED, and the maximum display width of the largest image for layout = CONSTRAINED.
    # Ignored if layout = FLUID.
    width: Int

    # The display height of the generated image for layout = FIXED, and the maximum display height of the largest image for layout = CONSTRAINED.
    # The image will be cropped if the aspect ratio does not match the source image. If omitted, it is calculated from the supplied width,
    # matching the aspect ratio of the source image.
    height: Int

    # If set along with width or height, this will set the value of the other dimension to match the provided aspect ratio, cropping the image if needed.
    # If neither width or height is provided, height will be set based on the intrinsic width of the source image.
    aspectRatio: Float

    # Format of generated placeholder image, displayed while the main image loads.
    # BLURRED: a blurred, low resolution image, encoded as a base64 data URI (default)
    # DOMINANT_COLOR: a solid color, calculated from the dominant color of the image.
    # TRACED_SVG: a low-resolution traced SVG of the image.
    # NONE: no placeholder. Set "background" to use a fixed background color.
    placeholder: ImagePlaceholder

    # Options for the low-resolution placeholder image. Set placeholder to "BLURRED" to use this
    blurredOptions: BlurredOptions

    # Options for traced placeholder SVGs. You also should set placeholder to "TRACED_SVG".
    tracedSVGOptions: Potrace

    # The image formats to generate. Valid values are "AUTO" (meaning the same format as the source image), "JPG", "PNG", "WEBP" and "AVIF".
    # The default value is [AUTO, WEBP], and you should rarely need to change this. Take care if you specify JPG or PNG when you do
    # not know the formats of the source images, as this could lead to unwanted results such as converting JPEGs to PNGs. Specifying
    # both PNG and JPG is not supported and will be ignored.
    formats: [ImageFormat]

    # A list of image pixel densities to generate. It will never generate images larger than the source, and will always include a 1x image.
    # Default is [ 1, 2 ] for FIXED images, meaning 1x and 2x and [0.25, 0.5, 1, 2] for CONSTRAINED. In this case, an image with a constrained layout
    # and width = 400 would generate images at 100, 200, 400 and 800px wide. Ignored for FULL_WIDTH images, which use breakpoints instead
    outputPixelDensities: [Float]

    # Specifies the image widths to generate. For FIXED and CONSTRAINED images it is better to allow these to be determined automatically,
    # based on the image size. For FULL_WIDTH images this can be used to override the default, which is [750, 1080, 1366, 1920].
    # It will never generate any images larger than the source.
    breakpoints: [Int]

    # The "sizes" property, passed to the img tag. This describes the display size of the image.
    # This does not affect the generated images, but is used by the browser to decide which images to download.
    # You should usually leave this blank, and a suitable value will be calculated. The exception is if a FULL_WIDTH image
    # does not actually span the full width of the screen, in which case you should pass the correct size here.
    sizes: String

    # The default quality. This is overridden by any format-specific options
    quality: Int

    # Options to pass to sharp when generating JPG images.
    jpgOptions: JPGOptions

    # Options to pass to sharp when generating PNG images.
    pngOptions: PNGOptions

    # Options to pass to sharp when generating WebP images.
    webpOptions: WebPOptions

    # Options to pass to sharp when generating AVIF images.
    avifOptions: AVIFOptions

    # Options to pass to sharp to control cropping and other image manipulations.
    transformOptions: TransformOptions

    # Background color applied to the wrapper. Also passed to sharp to use as a background when "letterboxing" an image to another aspect ratio.
    backgroundColor: String
  ): JSON!
  original: ImageSharpOriginal
  resize(width: Int, height: Int, quality: Int, jpegQuality: Int, pngQuality: Int, webpQuality: Int, jpegProgressive: Boolean = true, pngCompressionLevel: Int = 9, pngCompressionSpeed: Int = 4, grayscale: Boolean = false, duotone: DuotoneGradient, base64: Boolean = false, traceSVG: Potrace, toFormat: ImageFormat = AUTO, cropFocus: ImageCropFocus = ATTENTION, fit: ImageFit = COVER, background: String = "rgba(0,0,0,1)", rotate: Int = 0, trim: Float = 0): ImageSharpResize
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

type ImageSharpFixed {
  base64: String
  tracedSVG: String
  aspectRatio: Float
  width: Float!
  height: Float!
  src: String!
  srcSet: String!
  srcWebp: String
  srcSetWebp: String
  originalName: String
}

type ImageSharpFluid {
  base64: String
  tracedSVG: String
  aspectRatio: Float!
  src: String!
  srcSet: String!
  srcWebp: String
  srcSetWebp: String
  sizes: String!
  originalImg: String
  originalName: String
  presentationWidth: Int!
  presentationHeight: Int!
}

# The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

enum ImagePlaceholder {
  DOMINANT_COLOR
  TRACED_SVG
  BLURRED
  NONE
}

input BlurredOptions {
  # Width of the generated low-res preview. Default is 20px
  width: Int

  # Force the output format for the low-res preview. Default is to use the same format as the input. You should rarely need to change this
  toFormat: ImageFormat
}

input JPGOptions {
  quality: Int
  progressive: Boolean = true
}

input PNGOptions {
  quality: Int
  compressionSpeed: Int = 4
}

input WebPOptions {
  quality: Int
}

input AVIFOptions {
  quality: Int
  lossless: Boolean
  speed: Int
}

input TransformOptions {
  grayscale: Boolean = false
  duotone: DuotoneGradient
  rotate: Int = 0
  trim: Float = 0
  cropFocus: ImageCropFocus = ATTENTION
  fit: ImageFit = COVER
}

type ImageSharpOriginal {
  width: Float
  height: Float
  src: String
}

type ImageSharpResize {
  src: String
  tracedSVG: String
  width: Int
  height: Int
  aspectRatio: Float
  originalName: String
}

type SiteLayout {
  contentPadding: String
  maxWidth: String
  mobileBreakpoint: String
}

type MdxFrontmatter {
  startDate(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String = "YYYY-MM-DD"

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  endDate(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String = "YYYY-MM-DD"

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  title: String!
  path: String
  template: String
  description: String
  tileShorthand: MdxFrontmatterTileShorthand
  resources: [MdxFrontmatterResources]
  tags: [String]
  duration: Int
  procIdx: Float
  redirects: [String]
  promote: Boolean
}

type MdxFrontmatterTileShorthand {
  title: String
  description: String
}

type MdxFrontmatterResources {
  title: String
  url: String
}

type Locale implements Node {
  name: String!
  localName: String!
  locale: String!
  hrefLang: String!
  isDefault: Boolean!
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

type RelatedResource implements Node {
  id: ID!
  title: String!
  url: String!
  plugin: String
  parent: Node
  children: [Node!]!
  internal: Internal!
}

type NewRelicThemeConfig implements Node {
  env: String!
  relatedResources: NewRelicThemeRelatedResourceConfig!
  tessen: NewRelicThemeTessenConfig
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

type NewRelicThemeRelatedResourceConfig {
  labels: [RelatedResourceLabel!]!
}

type RelatedResourceLabel {
  baseUrl: String!
  label: String!
}

type NewRelicThemeTessenConfig {
  product: String
  subproduct: String
}

type MarkdownHeading {
  id: String
  value: String
  depth: Int
}

enum MarkdownHeadingLevels {
  h1
  h2
  h3
  h4
  h5
  h6
}

enum MarkdownExcerptFormats {
  PLAIN
  HTML
  MARKDOWN
}

type MarkdownWordCount {
  paragraphs: Int
  sentences: Int
  words: Int
}

type MarkdownRemark implements Node {
  id: ID!
  html: String
  htmlAst: JSON
  excerpt(pruneLength: Int = 140, truncate: Boolean = false, format: MarkdownExcerptFormats = PLAIN): String
  excerptAst(pruneLength: Int = 140, truncate: Boolean = false): JSON
  headings(depth: MarkdownHeadingLevels): [MarkdownHeading]
  timeToRead: Int
  tableOfContents(absolute: Boolean = false, pathToSlugField: String = "", maxDepth: Int, heading: String): String
  wordCount: MarkdownWordCount
  parent: Node
  children: [Node!]!
  internal: Internal!
}

type MdxHeadingMdx {
  value: String
  depth: Int
}

enum HeadingsMdx {
  h1
  h2
  h3
  h4
  h5
  h6
}

type MdxWordCount {
  paragraphs: Int
  sentences: Int
  words: Int
}

type Mdx implements Node {
  rawBody: String!
  fileAbsolutePath: String!
  frontmatter: MdxFrontmatter
  slug: String
  body: String!
  excerpt(pruneLength: Int = 140, truncate: Boolean = false): String!
  headings(depth: HeadingsMdx): [MdxHeadingMdx]
  html: String
  mdxAST: JSON
  tableOfContents(maxDepth: Int): JSON
  timeToRead: Int
  wordCount: MdxWordCount
  fields: MdxFields

  # Returns all children nodes filtered by type RelatedResource
  childrenRelatedResource: [RelatedResource]

  # Returns the first child node of type RelatedResource or null if there are no children of given type on this node
  childRelatedResource: RelatedResource
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  relatedResources(limit: Int = 5): [RelatedResource!]
}

type MdxFields {
  fileRelativePath: String
  gitAuthorTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  slug: String
}

union NewRelicSdkPropTypeMeta = NewRelicSdkPropTypeArrayOfMeta | NewRelicSdkPropTypeEnumMeta | NewRelicSdkPropTypeFunctionMeta | NewRelicSdkPropTypeShapeMeta | NewRelicSdkPropTypeUnionMeta

type NewRelicSdkPropTypeArrayOfMeta {
  itemTypes: NewRelicSdkPropTypeDefinitionType!
}

type NewRelicSdkPropTypeEnumMeta {
  constants: [String!]!
}

type NewRelicSdkPropTypeFunctionMeta {
  returnValue: [NewRelicSdkFunctionReturnValue]!
  arguments: [NewRelicSdkFunctionArgument!]!
}

type NewRelicSdkPropTypeShapeMeta {
  types: [NewRelicSdkPropTypeDefinition!]!
}

type NewRelicSdkPropTypeUnionMeta {
  types: [NewRelicSdkPropTypeDefinitionType!]!
}

type NewRelicSdkComponent implements Node {
  constants: [NewRelicSdkConstant!]!
  examples: [NewRelicSdkExample!]!
  propTypes: [NewRelicSdkPropTypeDefinition!]!
  typeDefs: [NewRelicSdkTypeDefinition!]!
  methods: [NewRelicSdkMethod!]!
  name: String
  usage: String
  description: String
  fields: NewRelicSdkComponentFields
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

type NewRelicSdkComponentFields {
  slug: String
}

type NewRelicSdkApi implements Node {
  constants: [NewRelicSdkConstant!]!
  examples: [NewRelicSdkExample!]!
  typeDefs: [NewRelicSdkTypeDefinition]
  methods: [NewRelicSdkMethod!]!
  name: String
  usage: String
  description: String
  fields: NewRelicSdkApiFields
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

type NewRelicSdkApiFields {
  slug: String
}

type NewRelicSdkPropTypeDefinition {
  name: String!
  type: NewRelicSdkPropTypeDefinitionType!
  examples: [NewRelicSdkExample!]!
  defaultValue: String
  description: String
  deprecation: NewRelicSdkComponentPropTypesDeprecation
  isRequired: Boolean
}

type NewRelicSdkMethod {
  examples: [NewRelicSdkExample!]!
  arguments: [NewRelicSdkFunctionArgument!]!
  returnValue: NewRelicSdkFunctionReturnValue!
  name: String
  description: String
}

type NewRelicSdkComponentPropTypesDeprecation {
  date(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String = "MM-DD-YYYY"

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  signature: String
  description: String
}

type NewRelicSdkPropTypeDefinitionType {
  name: String!
  raw: String!
  meta: NewRelicSdkPropTypeMeta
}

type NewRelicSdkFunctionReturnValue {
  description: String
  type: String!
  promiseType: String
}

type NewRelicSdkFunctionArgument {
  description: String
  name: String!
  type: String!
  defaultValue: String
}

type NewRelicSdkTypeDefinition {
  name: String!
  properties: [NewRelicSdkTypeDefinitionProperty]
}

type NewRelicSdkTypeDefinitionProperty {
  name: String!
  description: String
  type: String!
}

type NewRelicSdkConstant {
  name: String!
  value: JSON!
}

type NewRelicSdkExample {
  label: String!
  sourceCode: String!
  live: Boolean!
  preview: Boolean!
}

type Query {
  newRelicSdk: NewRelicSdk!
  file(sourceInstanceName: StringQueryOperatorInput, absolutePath: StringQueryOperatorInput, relativePath: StringQueryOperatorInput, extension: StringQueryOperatorInput, size: IntQueryOperatorInput, prettySize: StringQueryOperatorInput, modifiedTime: DateQueryOperatorInput, accessTime: DateQueryOperatorInput, changeTime: DateQueryOperatorInput, birthTime: DateQueryOperatorInput, root: StringQueryOperatorInput, dir: StringQueryOperatorInput, base: StringQueryOperatorInput, ext: StringQueryOperatorInput, name: StringQueryOperatorInput, relativeDirectory: StringQueryOperatorInput, dev: IntQueryOperatorInput, mode: IntQueryOperatorInput, nlink: IntQueryOperatorInput, uid: IntQueryOperatorInput, gid: IntQueryOperatorInput, rdev: IntQueryOperatorInput, ino: FloatQueryOperatorInput, atimeMs: FloatQueryOperatorInput, mtimeMs: FloatQueryOperatorInput, ctimeMs: FloatQueryOperatorInput, atime: DateQueryOperatorInput, mtime: DateQueryOperatorInput, ctime: DateQueryOperatorInput, birthtime: DateQueryOperatorInput, birthtimeMs: FloatQueryOperatorInput, blksize: IntQueryOperatorInput, blocks: IntQueryOperatorInput, publicURL: StringQueryOperatorInput, childrenImageSharp: ImageSharpFilterListInput, childImageSharp: ImageSharpFilterInput, childrenMdx: MdxFilterListInput, childMdx: MdxFilterInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): File
  allFile(filter: FileFilterInput, sort: FileSortInput, skip: Int, limit: Int): FileConnection!
  directory(sourceInstanceName: StringQueryOperatorInput, absolutePath: StringQueryOperatorInput, relativePath: StringQueryOperatorInput, extension: StringQueryOperatorInput, size: IntQueryOperatorInput, prettySize: StringQueryOperatorInput, modifiedTime: DateQueryOperatorInput, accessTime: DateQueryOperatorInput, changeTime: DateQueryOperatorInput, birthTime: DateQueryOperatorInput, root: StringQueryOperatorInput, dir: StringQueryOperatorInput, base: StringQueryOperatorInput, ext: StringQueryOperatorInput, name: StringQueryOperatorInput, relativeDirectory: StringQueryOperatorInput, dev: IntQueryOperatorInput, mode: IntQueryOperatorInput, nlink: IntQueryOperatorInput, uid: IntQueryOperatorInput, gid: IntQueryOperatorInput, rdev: IntQueryOperatorInput, ino: FloatQueryOperatorInput, atimeMs: FloatQueryOperatorInput, mtimeMs: FloatQueryOperatorInput, ctimeMs: FloatQueryOperatorInput, atime: DateQueryOperatorInput, mtime: DateQueryOperatorInput, ctime: DateQueryOperatorInput, birthtime: DateQueryOperatorInput, birthtimeMs: FloatQueryOperatorInput, blksize: IntQueryOperatorInput, blocks: IntQueryOperatorInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): Directory
  allDirectory(filter: DirectoryFilterInput, sort: DirectorySortInput, skip: Int, limit: Int): DirectoryConnection!
  site(buildTime: DateQueryOperatorInput, siteMetadata: SiteSiteMetadataFilterInput, port: IntQueryOperatorInput, host: StringQueryOperatorInput, flags: SiteFlagsFilterInput, polyfill: BooleanQueryOperatorInput, pathPrefix: StringQueryOperatorInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): Site
  allSite(filter: SiteFilterInput, sort: SiteSortInput, skip: Int, limit: Int): SiteConnection!
  siteFunction(functionRoute: StringQueryOperatorInput, pluginName: StringQueryOperatorInput, originalAbsoluteFilePath: StringQueryOperatorInput, originalRelativeFilePath: StringQueryOperatorInput, relativeCompiledFilePath: StringQueryOperatorInput, absoluteCompiledFilePath: StringQueryOperatorInput, matchPath: StringQueryOperatorInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): SiteFunction
  allSiteFunction(filter: SiteFunctionFilterInput, sort: SiteFunctionSortInput, skip: Int, limit: Int): SiteFunctionConnection!
  sitePage(path: StringQueryOperatorInput, component: StringQueryOperatorInput, internalComponentName: StringQueryOperatorInput, componentChunkName: StringQueryOperatorInput, matchPath: StringQueryOperatorInput, isCreatedByStatefulCreatePages: BooleanQueryOperatorInput, pluginCreator: SitePluginFilterInput, pluginCreatorId: StringQueryOperatorInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, context: SitePageContextFilterInput): SitePage
  allSitePage(filter: SitePageFilterInput, sort: SitePageSortInput, skip: Int, limit: Int): SitePageConnection!
  sitePlugin(resolve: StringQueryOperatorInput, name: StringQueryOperatorInput, version: StringQueryOperatorInput, nodeAPIs: StringQueryOperatorInput, browserAPIs: StringQueryOperatorInput, ssrAPIs: StringQueryOperatorInput, pluginFilepath: StringQueryOperatorInput, pluginOptions: SitePluginPluginOptionsFilterInput, packageJson: SitePluginPackageJsonFilterInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): SitePlugin
  allSitePlugin(filter: SitePluginFilterInput, sort: SitePluginSortInput, skip: Int, limit: Int): SitePluginConnection!
  siteBuildMetadata(buildTime: DateQueryOperatorInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): SiteBuildMetadata
  allSiteBuildMetadata(filter: SiteBuildMetadataFilterInput, sort: SiteBuildMetadataSortInput, skip: Int, limit: Int): SiteBuildMetadataConnection!
  imageSharp(fixed: ImageSharpFixedFilterInput, fluid: ImageSharpFluidFilterInput, gatsbyImageData: JSONQueryOperatorInput, original: ImageSharpOriginalFilterInput, resize: ImageSharpResizeFilterInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): ImageSharp
  allImageSharp(filter: ImageSharpFilterInput, sort: ImageSharpSortInput, skip: Int, limit: Int): ImageSharpConnection!
  locale(name: StringQueryOperatorInput, localName: StringQueryOperatorInput, locale: StringQueryOperatorInput, hrefLang: StringQueryOperatorInput, isDefault: BooleanQueryOperatorInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): Locale
  allLocale(filter: LocaleFilterInput, sort: LocaleSortInput, skip: Int, limit: Int): LocaleConnection!
  relatedResource(id: StringQueryOperatorInput, title: StringQueryOperatorInput, url: StringQueryOperatorInput, plugin: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): RelatedResource
  allRelatedResource(filter: RelatedResourceFilterInput, sort: RelatedResourceSortInput, skip: Int, limit: Int): RelatedResourceConnection!
  newRelicThemeConfig(env: StringQueryOperatorInput, relatedResources: NewRelicThemeRelatedResourceConfigFilterInput, tessen: NewRelicThemeTessenConfigFilterInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): NewRelicThemeConfig
  allNewRelicThemeConfig(filter: NewRelicThemeConfigFilterInput, sort: NewRelicThemeConfigSortInput, skip: Int, limit: Int): NewRelicThemeConfigConnection!
  markdownRemark(id: StringQueryOperatorInput, html: StringQueryOperatorInput, htmlAst: JSONQueryOperatorInput, excerpt: StringQueryOperatorInput, excerptAst: JSONQueryOperatorInput, headings: MarkdownHeadingFilterListInput, timeToRead: IntQueryOperatorInput, tableOfContents: StringQueryOperatorInput, wordCount: MarkdownWordCountFilterInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): MarkdownRemark
  allMarkdownRemark(filter: MarkdownRemarkFilterInput, sort: MarkdownRemarkSortInput, skip: Int, limit: Int): MarkdownRemarkConnection!
  mdx(rawBody: StringQueryOperatorInput, fileAbsolutePath: StringQueryOperatorInput, frontmatter: MdxFrontmatterFilterInput, slug: StringQueryOperatorInput, body: StringQueryOperatorInput, excerpt: StringQueryOperatorInput, headings: MdxHeadingMdxFilterListInput, html: StringQueryOperatorInput, mdxAST: JSONQueryOperatorInput, tableOfContents: JSONQueryOperatorInput, timeToRead: IntQueryOperatorInput, wordCount: MdxWordCountFilterInput, fields: MdxFieldsFilterInput, childrenRelatedResource: RelatedResourceFilterListInput, childRelatedResource: RelatedResourceFilterInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): Mdx
  allMdx(filter: MdxFilterInput, sort: MdxSortInput, skip: Int, limit: Int): MdxConnection!
  newRelicSdkComponent(constants: NewRelicSdkConstantFilterListInput, examples: NewRelicSdkExampleFilterListInput, propTypes: NewRelicSdkPropTypeDefinitionFilterListInput, typeDefs: NewRelicSdkTypeDefinitionFilterListInput, methods: NewRelicSdkMethodFilterListInput, name: StringQueryOperatorInput, usage: StringQueryOperatorInput, description: StringQueryOperatorInput, fields: NewRelicSdkComponentFieldsFilterInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): NewRelicSdkComponent
  allNewRelicSdkComponent(filter: NewRelicSdkComponentFilterInput, sort: NewRelicSdkComponentSortInput, skip: Int, limit: Int): NewRelicSdkComponentConnection!
  newRelicSdkApi(constants: NewRelicSdkConstantFilterListInput, examples: NewRelicSdkExampleFilterListInput, typeDefs: NewRelicSdkTypeDefinitionFilterListInput, methods: NewRelicSdkMethodFilterListInput, name: StringQueryOperatorInput, usage: StringQueryOperatorInput, description: StringQueryOperatorInput, fields: NewRelicSdkApiFieldsFilterInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): NewRelicSdkApi
  allNewRelicSdkApi(filter: NewRelicSdkApiFilterInput, sort: NewRelicSdkApiSortInput, skip: Int, limit: Int): NewRelicSdkApiConnection!
}

input StringQueryOperatorInput {
  eq: String
  ne: String
  in: [String]
  nin: [String]
  regex: String
  glob: String
}

input IntQueryOperatorInput {
  eq: Int
  ne: Int
  gt: Int
  gte: Int
  lt: Int
  lte: Int
  in: [Int]
  nin: [Int]
}

input DateQueryOperatorInput {
  eq: Date
  ne: Date
  gt: Date
  gte: Date
  lt: Date
  lte: Date
  in: [Date]
  nin: [Date]
}

input FloatQueryOperatorInput {
  eq: Float
  ne: Float
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  in: [Float]
  nin: [Float]
}

input ImageSharpFilterListInput {
  elemMatch: ImageSharpFilterInput
}

input ImageSharpFilterInput {
  fixed: ImageSharpFixedFilterInput
  fluid: ImageSharpFluidFilterInput
  gatsbyImageData: JSONQueryOperatorInput
  original: ImageSharpOriginalFilterInput
  resize: ImageSharpResizeFilterInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input ImageSharpFixedFilterInput {
  base64: StringQueryOperatorInput
  tracedSVG: StringQueryOperatorInput
  aspectRatio: FloatQueryOperatorInput
  width: FloatQueryOperatorInput
  height: FloatQueryOperatorInput
  src: StringQueryOperatorInput
  srcSet: StringQueryOperatorInput
  srcWebp: StringQueryOperatorInput
  srcSetWebp: StringQueryOperatorInput
  originalName: StringQueryOperatorInput
}

input ImageSharpFluidFilterInput {
  base64: StringQueryOperatorInput
  tracedSVG: StringQueryOperatorInput
  aspectRatio: FloatQueryOperatorInput
  src: StringQueryOperatorInput
  srcSet: StringQueryOperatorInput
  srcWebp: StringQueryOperatorInput
  srcSetWebp: StringQueryOperatorInput
  sizes: StringQueryOperatorInput
  originalImg: StringQueryOperatorInput
  originalName: StringQueryOperatorInput
  presentationWidth: IntQueryOperatorInput
  presentationHeight: IntQueryOperatorInput
}

input JSONQueryOperatorInput {
  eq: JSON
  ne: JSON
  in: [JSON]
  nin: [JSON]
  regex: JSON
  glob: JSON
}

input ImageSharpOriginalFilterInput {
  width: FloatQueryOperatorInput
  height: FloatQueryOperatorInput
  src: StringQueryOperatorInput
}

input ImageSharpResizeFilterInput {
  src: StringQueryOperatorInput
  tracedSVG: StringQueryOperatorInput
  width: IntQueryOperatorInput
  height: IntQueryOperatorInput
  aspectRatio: FloatQueryOperatorInput
  originalName: StringQueryOperatorInput
}

input NodeFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input NodeFilterListInput {
  elemMatch: NodeFilterInput
}

input InternalFilterInput {
  content: StringQueryOperatorInput
  contentDigest: StringQueryOperatorInput
  description: StringQueryOperatorInput
  fieldOwners: StringQueryOperatorInput
  ignoreType: BooleanQueryOperatorInput
  mediaType: StringQueryOperatorInput
  owner: StringQueryOperatorInput
  type: StringQueryOperatorInput
}

input BooleanQueryOperatorInput {
  eq: Boolean
  ne: Boolean
  in: [Boolean]
  nin: [Boolean]
}

input MdxFilterListInput {
  elemMatch: MdxFilterInput
}

input MdxFilterInput {
  rawBody: StringQueryOperatorInput
  fileAbsolutePath: StringQueryOperatorInput
  frontmatter: MdxFrontmatterFilterInput
  slug: StringQueryOperatorInput
  body: StringQueryOperatorInput
  excerpt: StringQueryOperatorInput
  headings: MdxHeadingMdxFilterListInput
  html: StringQueryOperatorInput
  mdxAST: JSONQueryOperatorInput
  tableOfContents: JSONQueryOperatorInput
  timeToRead: IntQueryOperatorInput
  wordCount: MdxWordCountFilterInput
  fields: MdxFieldsFilterInput
  childrenRelatedResource: RelatedResourceFilterListInput
  childRelatedResource: RelatedResourceFilterInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input MdxFrontmatterFilterInput {
  startDate: DateQueryOperatorInput
  endDate: DateQueryOperatorInput
  title: StringQueryOperatorInput
  path: StringQueryOperatorInput
  template: StringQueryOperatorInput
  description: StringQueryOperatorInput
  tileShorthand: MdxFrontmatterTileShorthandFilterInput
  resources: MdxFrontmatterResourcesFilterListInput
  tags: StringQueryOperatorInput
  duration: IntQueryOperatorInput
  procIdx: FloatQueryOperatorInput
  redirects: StringQueryOperatorInput
  promote: BooleanQueryOperatorInput
}

input MdxFrontmatterTileShorthandFilterInput {
  title: StringQueryOperatorInput
  description: StringQueryOperatorInput
}

input MdxFrontmatterResourcesFilterListInput {
  elemMatch: MdxFrontmatterResourcesFilterInput
}

input MdxFrontmatterResourcesFilterInput {
  title: StringQueryOperatorInput
  url: StringQueryOperatorInput
}

input MdxHeadingMdxFilterListInput {
  elemMatch: MdxHeadingMdxFilterInput
}

input MdxHeadingMdxFilterInput {
  value: StringQueryOperatorInput
  depth: IntQueryOperatorInput
}

input MdxWordCountFilterInput {
  paragraphs: IntQueryOperatorInput
  sentences: IntQueryOperatorInput
  words: IntQueryOperatorInput
}

input MdxFieldsFilterInput {
  fileRelativePath: StringQueryOperatorInput
  gitAuthorTime: DateQueryOperatorInput
  slug: StringQueryOperatorInput
}

input RelatedResourceFilterListInput {
  elemMatch: RelatedResourceFilterInput
}

input RelatedResourceFilterInput {
  id: StringQueryOperatorInput
  title: StringQueryOperatorInput
  url: StringQueryOperatorInput
  plugin: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

type FileConnection {
  totalCount: Int!
  edges: [FileEdge!]!
  nodes: [File!]!
  pageInfo: PageInfo!
  distinct(field: FileFieldsEnum!): [String!]!
  max(field: FileFieldsEnum!): Float
  min(field: FileFieldsEnum!): Float
  sum(field: FileFieldsEnum!): Float
  group(skip: Int, limit: Int, field: FileFieldsEnum!): [FileGroupConnection!]!
}

type FileEdge {
  next: File
  node: File!
  previous: File
}

type PageInfo {
  currentPage: Int!
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
  itemCount: Int!
  pageCount: Int!
  perPage: Int
  totalCount: Int!
}

enum FileFieldsEnum {
  sourceInstanceName
  absolutePath
  relativePath
  extension
  size
  prettySize
  modifiedTime
  accessTime
  changeTime
  birthTime
  root
  dir
  base
  ext
  name
  relativeDirectory
  dev
  mode
  nlink
  uid
  gid
  rdev
  ino
  atimeMs
  mtimeMs
  ctimeMs
  atime
  mtime
  ctime
  birthtime
  birthtimeMs
  blksize
  blocks
  publicURL
  childrenImageSharp
  childrenImageSharp___fixed___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___originalImg @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___presentationWidth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___presentationHeight @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___original___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___original___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___original___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___resize___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___resize___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___resize___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___resize___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___resize___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___resize___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___originalImg @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___presentationWidth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___presentationHeight @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___original___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___original___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___original___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx
  childrenMdx___rawBody
  childrenMdx___fileAbsolutePath
  childrenMdx___frontmatter___startDate
  childrenMdx___frontmatter___endDate
  childrenMdx___frontmatter___title
  childrenMdx___frontmatter___path
  childrenMdx___frontmatter___template
  childrenMdx___frontmatter___description
  childrenMdx___frontmatter___tileShorthand___title
  childrenMdx___frontmatter___tileShorthand___description
  childrenMdx___frontmatter___resources
  childrenMdx___frontmatter___resources___title
  childrenMdx___frontmatter___resources___url
  childrenMdx___frontmatter___tags
  childrenMdx___frontmatter___duration
  childrenMdx___frontmatter___procIdx
  childrenMdx___frontmatter___redirects
  childrenMdx___frontmatter___promote
  childrenMdx___slug
  childrenMdx___body
  childrenMdx___excerpt @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___headings @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___headings___value @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___headings___depth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___html @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___mdxAST @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___tableOfContents @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___timeToRead @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___wordCount___paragraphs @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___wordCount___sentences @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___wordCount___words @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___fields___fileRelativePath @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___fields___gitAuthorTime @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___fields___slug @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___childrenRelatedResource @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___childrenRelatedResource___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___childrenRelatedResource___title @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___childrenRelatedResource___url @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___childrenRelatedResource___plugin @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___childrenRelatedResource___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___childrenRelatedResource___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___childrenRelatedResource___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___childrenRelatedResource___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___childrenRelatedResource___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___childrenRelatedResource___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___childrenRelatedResource___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___childrenRelatedResource___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___childrenRelatedResource___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___childrenRelatedResource___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___childrenRelatedResource___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___childrenRelatedResource___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___childrenRelatedResource___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___childRelatedResource___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___childRelatedResource___title @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___childRelatedResource___url @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___childRelatedResource___plugin @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___childRelatedResource___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___childRelatedResource___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___childRelatedResource___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___childRelatedResource___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___childRelatedResource___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___childRelatedResource___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___childRelatedResource___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___childRelatedResource___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___childRelatedResource___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___childRelatedResource___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___childRelatedResource___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___childRelatedResource___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___childRelatedResource___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMdx___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___rawBody
  childMdx___fileAbsolutePath
  childMdx___frontmatter___startDate
  childMdx___frontmatter___endDate
  childMdx___frontmatter___title
  childMdx___frontmatter___path
  childMdx___frontmatter___template
  childMdx___frontmatter___description
  childMdx___frontmatter___tileShorthand___title
  childMdx___frontmatter___tileShorthand___description
  childMdx___frontmatter___resources
  childMdx___frontmatter___resources___title
  childMdx___frontmatter___resources___url
  childMdx___frontmatter___tags
  childMdx___frontmatter___duration
  childMdx___frontmatter___procIdx
  childMdx___frontmatter___redirects
  childMdx___frontmatter___promote
  childMdx___slug
  childMdx___body
  childMdx___excerpt @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___headings @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___headings___value @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___headings___depth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___html @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___mdxAST @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___tableOfContents @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___timeToRead @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___wordCount___paragraphs @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___wordCount___sentences @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___wordCount___words @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___fields___fileRelativePath @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___fields___gitAuthorTime @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___fields___slug @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___childrenRelatedResource @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___childrenRelatedResource___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___childrenRelatedResource___title @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___childrenRelatedResource___url @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___childrenRelatedResource___plugin @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___childrenRelatedResource___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___childrenRelatedResource___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___childrenRelatedResource___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___childrenRelatedResource___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___childrenRelatedResource___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___childrenRelatedResource___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___childrenRelatedResource___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___childrenRelatedResource___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___childrenRelatedResource___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___childrenRelatedResource___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___childrenRelatedResource___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___childrenRelatedResource___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___childrenRelatedResource___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___childRelatedResource___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___childRelatedResource___title @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___childRelatedResource___url @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___childRelatedResource___plugin @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___childRelatedResource___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___childRelatedResource___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___childRelatedResource___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___childRelatedResource___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___childRelatedResource___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___childRelatedResource___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___childRelatedResource___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___childRelatedResource___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___childRelatedResource___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___childRelatedResource___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___childRelatedResource___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___childRelatedResource___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___childRelatedResource___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMdx___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

type FileGroupConnection {
  totalCount: Int!
  edges: [FileEdge!]!
  nodes: [File!]!
  pageInfo: PageInfo!
  distinct(field: FileFieldsEnum!): [String!]!
  max(field: FileFieldsEnum!): Float
  min(field: FileFieldsEnum!): Float
  sum(field: FileFieldsEnum!): Float
  group(skip: Int, limit: Int, field: FileFieldsEnum!): [FileGroupConnection!]!
  field: String!
  fieldValue: String
}

input FileFilterInput {
  sourceInstanceName: StringQueryOperatorInput
  absolutePath: StringQueryOperatorInput
  relativePath: StringQueryOperatorInput
  extension: StringQueryOperatorInput
  size: IntQueryOperatorInput
  prettySize: StringQueryOperatorInput
  modifiedTime: DateQueryOperatorInput
  accessTime: DateQueryOperatorInput
  changeTime: DateQueryOperatorInput
  birthTime: DateQueryOperatorInput
  root: StringQueryOperatorInput
  dir: StringQueryOperatorInput
  base: StringQueryOperatorInput
  ext: StringQueryOperatorInput
  name: StringQueryOperatorInput
  relativeDirectory: StringQueryOperatorInput
  dev: IntQueryOperatorInput
  mode: IntQueryOperatorInput
  nlink: IntQueryOperatorInput
  uid: IntQueryOperatorInput
  gid: IntQueryOperatorInput
  rdev: IntQueryOperatorInput
  ino: FloatQueryOperatorInput
  atimeMs: FloatQueryOperatorInput
  mtimeMs: FloatQueryOperatorInput
  ctimeMs: FloatQueryOperatorInput
  atime: DateQueryOperatorInput
  mtime: DateQueryOperatorInput
  ctime: DateQueryOperatorInput
  birthtime: DateQueryOperatorInput
  birthtimeMs: FloatQueryOperatorInput
  blksize: IntQueryOperatorInput
  blocks: IntQueryOperatorInput
  publicURL: StringQueryOperatorInput
  childrenImageSharp: ImageSharpFilterListInput
  childImageSharp: ImageSharpFilterInput
  childrenMdx: MdxFilterListInput
  childMdx: MdxFilterInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input FileSortInput {
  fields: [FileFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

enum SortOrderEnum {
  ASC
  DESC
}

type DirectoryConnection {
  totalCount: Int!
  edges: [DirectoryEdge!]!
  nodes: [Directory!]!
  pageInfo: PageInfo!
  distinct(field: DirectoryFieldsEnum!): [String!]!
  max(field: DirectoryFieldsEnum!): Float
  min(field: DirectoryFieldsEnum!): Float
  sum(field: DirectoryFieldsEnum!): Float
  group(skip: Int, limit: Int, field: DirectoryFieldsEnum!): [DirectoryGroupConnection!]!
}

type DirectoryEdge {
  next: Directory
  node: Directory!
  previous: Directory
}

enum DirectoryFieldsEnum {
  sourceInstanceName
  absolutePath
  relativePath
  extension
  size
  prettySize
  modifiedTime
  accessTime
  changeTime
  birthTime
  root
  dir
  base
  ext
  name
  relativeDirectory
  dev
  mode
  nlink
  uid
  gid
  rdev
  ino
  atimeMs
  mtimeMs
  ctimeMs
  atime
  mtime
  ctime
  birthtime
  birthtimeMs
  blksize
  blocks
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

type DirectoryGroupConnection {
  totalCount: Int!
  edges: [DirectoryEdge!]!
  nodes: [Directory!]!
  pageInfo: PageInfo!
  distinct(field: DirectoryFieldsEnum!): [String!]!
  max(field: DirectoryFieldsEnum!): Float
  min(field: DirectoryFieldsEnum!): Float
  sum(field: DirectoryFieldsEnum!): Float
  group(skip: Int, limit: Int, field: DirectoryFieldsEnum!): [DirectoryGroupConnection!]!
  field: String!
  fieldValue: String
}

input DirectoryFilterInput {
  sourceInstanceName: StringQueryOperatorInput
  absolutePath: StringQueryOperatorInput
  relativePath: StringQueryOperatorInput
  extension: StringQueryOperatorInput
  size: IntQueryOperatorInput
  prettySize: StringQueryOperatorInput
  modifiedTime: DateQueryOperatorInput
  accessTime: DateQueryOperatorInput
  changeTime: DateQueryOperatorInput
  birthTime: DateQueryOperatorInput
  root: StringQueryOperatorInput
  dir: StringQueryOperatorInput
  base: StringQueryOperatorInput
  ext: StringQueryOperatorInput
  name: StringQueryOperatorInput
  relativeDirectory: StringQueryOperatorInput
  dev: IntQueryOperatorInput
  mode: IntQueryOperatorInput
  nlink: IntQueryOperatorInput
  uid: IntQueryOperatorInput
  gid: IntQueryOperatorInput
  rdev: IntQueryOperatorInput
  ino: FloatQueryOperatorInput
  atimeMs: FloatQueryOperatorInput
  mtimeMs: FloatQueryOperatorInput
  ctimeMs: FloatQueryOperatorInput
  atime: DateQueryOperatorInput
  mtime: DateQueryOperatorInput
  ctime: DateQueryOperatorInput
  birthtime: DateQueryOperatorInput
  birthtimeMs: FloatQueryOperatorInput
  blksize: IntQueryOperatorInput
  blocks: IntQueryOperatorInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input DirectorySortInput {
  fields: [DirectoryFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input SiteSiteMetadataFilterInput {
  title: StringQueryOperatorInput
  description: StringQueryOperatorInput
  repository: StringQueryOperatorInput
  branch: StringQueryOperatorInput
  contributingUrl: StringQueryOperatorInput
  titleTemplate: StringQueryOperatorInput
  author: StringQueryOperatorInput
  siteUrl: StringQueryOperatorInput
}

input SiteFlagsFilterInput {
  DEV_SSR: BooleanQueryOperatorInput
  PRESERVE_WEBPACK_CACHE: BooleanQueryOperatorInput
  PRESERVE_FILE_DOWNLOAD_CACHE: BooleanQueryOperatorInput
}

type SiteConnection {
  totalCount: Int!
  edges: [SiteEdge!]!
  nodes: [Site!]!
  pageInfo: PageInfo!
  distinct(field: SiteFieldsEnum!): [String!]!
  max(field: SiteFieldsEnum!): Float
  min(field: SiteFieldsEnum!): Float
  sum(field: SiteFieldsEnum!): Float
  group(skip: Int, limit: Int, field: SiteFieldsEnum!): [SiteGroupConnection!]!
}

type SiteEdge {
  next: Site
  node: Site!
  previous: Site
}

enum SiteFieldsEnum {
  buildTime
  siteMetadata___title
  siteMetadata___description
  siteMetadata___repository
  siteMetadata___branch
  siteMetadata___contributingUrl
  siteMetadata___titleTemplate
  siteMetadata___author
  siteMetadata___siteUrl
  port
  host
  flags___DEV_SSR
  flags___PRESERVE_WEBPACK_CACHE
  flags___PRESERVE_FILE_DOWNLOAD_CACHE
  polyfill
  pathPrefix
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

type SiteGroupConnection {
  totalCount: Int!
  edges: [SiteEdge!]!
  nodes: [Site!]!
  pageInfo: PageInfo!
  distinct(field: SiteFieldsEnum!): [String!]!
  max(field: SiteFieldsEnum!): Float
  min(field: SiteFieldsEnum!): Float
  sum(field: SiteFieldsEnum!): Float
  group(skip: Int, limit: Int, field: SiteFieldsEnum!): [SiteGroupConnection!]!
  field: String!
  fieldValue: String
}

input SiteFilterInput {
  buildTime: DateQueryOperatorInput
  siteMetadata: SiteSiteMetadataFilterInput
  port: IntQueryOperatorInput
  host: StringQueryOperatorInput
  flags: SiteFlagsFilterInput
  polyfill: BooleanQueryOperatorInput
  pathPrefix: StringQueryOperatorInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input SiteSortInput {
  fields: [SiteFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type SiteFunctionConnection {
  totalCount: Int!
  edges: [SiteFunctionEdge!]!
  nodes: [SiteFunction!]!
  pageInfo: PageInfo!
  distinct(field: SiteFunctionFieldsEnum!): [String!]!
  max(field: SiteFunctionFieldsEnum!): Float
  min(field: SiteFunctionFieldsEnum!): Float
  sum(field: SiteFunctionFieldsEnum!): Float
  group(skip: Int, limit: Int, field: SiteFunctionFieldsEnum!): [SiteFunctionGroupConnection!]!
}

type SiteFunctionEdge {
  next: SiteFunction
  node: SiteFunction!
  previous: SiteFunction
}

enum SiteFunctionFieldsEnum {
  functionRoute
  pluginName
  originalAbsoluteFilePath
  originalRelativeFilePath
  relativeCompiledFilePath
  absoluteCompiledFilePath
  matchPath
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

type SiteFunctionGroupConnection {
  totalCount: Int!
  edges: [SiteFunctionEdge!]!
  nodes: [SiteFunction!]!
  pageInfo: PageInfo!
  distinct(field: SiteFunctionFieldsEnum!): [String!]!
  max(field: SiteFunctionFieldsEnum!): Float
  min(field: SiteFunctionFieldsEnum!): Float
  sum(field: SiteFunctionFieldsEnum!): Float
  group(skip: Int, limit: Int, field: SiteFunctionFieldsEnum!): [SiteFunctionGroupConnection!]!
  field: String!
  fieldValue: String
}

input SiteFunctionFilterInput {
  functionRoute: StringQueryOperatorInput
  pluginName: StringQueryOperatorInput
  originalAbsoluteFilePath: StringQueryOperatorInput
  originalRelativeFilePath: StringQueryOperatorInput
  relativeCompiledFilePath: StringQueryOperatorInput
  absoluteCompiledFilePath: StringQueryOperatorInput
  matchPath: StringQueryOperatorInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input SiteFunctionSortInput {
  fields: [SiteFunctionFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input SitePluginFilterInput {
  resolve: StringQueryOperatorInput
  name: StringQueryOperatorInput
  version: StringQueryOperatorInput
  nodeAPIs: StringQueryOperatorInput
  browserAPIs: StringQueryOperatorInput
  ssrAPIs: StringQueryOperatorInput
  pluginFilepath: StringQueryOperatorInput
  pluginOptions: SitePluginPluginOptionsFilterInput
  packageJson: SitePluginPackageJsonFilterInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input SitePluginPluginOptionsFilterInput {
  base64Width: IntQueryOperatorInput
  stripMetadata: BooleanQueryOperatorInput
  defaultQuality: IntQueryOperatorInput
  failOnError: BooleanQueryOperatorInput
  sourceMap: BooleanQueryOperatorInput
  autoLabel: StringQueryOperatorInput
  labelFormat: StringQueryOperatorInput
  cssPropOptimization: BooleanQueryOperatorInput
  output: StringQueryOperatorInput
  createLinkInHead: BooleanQueryOperatorInput
  entryLimit: IntQueryOperatorInput
  query: StringQueryOperatorInput
  classNameDark: StringQueryOperatorInput
  classNameLight: StringQueryOperatorInput
  storageKey: StringQueryOperatorInput
  minify: BooleanQueryOperatorInput
  component: StringQueryOperatorInput
  name: StringQueryOperatorInput
  path: StringQueryOperatorInput
  sitemap: StringQueryOperatorInput
  policy: SitePluginPluginOptionsPolicyFilterListInput
  configs: SitePluginPluginOptionsConfigsFilterInput
  oneTrustID: StringQueryOperatorInput
  forceTrailingSlashes: BooleanQueryOperatorInput
  layout: SitePluginPluginOptionsLayoutFilterInput
  prism: SitePluginPluginOptionsPrismFilterInput
  splitio: SitePluginPluginOptionsSplitioFilterInput
  relatedResources: SitePluginPluginOptionsRelatedResourcesFilterInput
  newrelic: SitePluginPluginOptionsNewrelicFilterInput
  tessen: SitePluginPluginOptionsTessenFilterInput
  implementation: SitePluginPluginOptionsImplementationFilterInput
  short_name: StringQueryOperatorInput
  start_url: StringQueryOperatorInput
  background_color: StringQueryOperatorInput
  theme_color: StringQueryOperatorInput
  display: StringQueryOperatorInput
  icon: StringQueryOperatorInput
  legacy: BooleanQueryOperatorInput
  theme_color_in_head: BooleanQueryOperatorInput
  cache_busting_mode: StringQueryOperatorInput
  crossOrigin: StringQueryOperatorInput
  include_favicon: BooleanQueryOperatorInput
  cacheDigest: StringQueryOperatorInput
  maxWidth: IntQueryOperatorInput
  linkImagesToOriginal: BooleanQueryOperatorInput
  showCaptions: BooleanQueryOperatorInput
  markdownCaptions: BooleanQueryOperatorInput
  sizeByPixelDensity: BooleanQueryOperatorInput
  backgroundColor: StringQueryOperatorInput
  quality: IntQueryOperatorInput
  withWebp: BooleanQueryOperatorInput
  tracedSVG: BooleanQueryOperatorInput
  loading: StringQueryOperatorInput
  decoding: StringQueryOperatorInput
  disableBgImageOnAlpha: BooleanQueryOperatorInput
  disableBgImage: BooleanQueryOperatorInput
  gatsbyRemarkPlugins: SitePluginPluginOptionsGatsbyRemarkPluginsFilterListInput
  extensions: StringQueryOperatorInput
  lessBabel: BooleanQueryOperatorInput
  mediaTypes: StringQueryOperatorInput
  root: StringQueryOperatorInput
  release: StringQueryOperatorInput
  debug: BooleanQueryOperatorInput
  googleAnalytics: SitePluginPluginOptionsGoogleAnalyticsFilterInput
  environments: StringQueryOperatorInput
  allPageHeaders: StringQueryOperatorInput
  outputPath: StringQueryOperatorInput
  emitSchema: SitePluginPluginOptionsEmitSchemaFilterInput
  isTSX: BooleanQueryOperatorInput
  jsxPragma: StringQueryOperatorInput
  allExtensions: BooleanQueryOperatorInput
  pathCheck: BooleanQueryOperatorInput
}

input SitePluginPluginOptionsPolicyFilterListInput {
  elemMatch: SitePluginPluginOptionsPolicyFilterInput
}

input SitePluginPluginOptionsPolicyFilterInput {
  userAgent: StringQueryOperatorInput
  allow: StringQueryOperatorInput
}

input SitePluginPluginOptionsConfigsFilterInput {
  production: SitePluginPluginOptionsConfigsProductionFilterInput
  staging: SitePluginPluginOptionsConfigsStagingFilterInput
}

input SitePluginPluginOptionsConfigsProductionFilterInput {
  instrumentationType: StringQueryOperatorInput
  accountId: StringQueryOperatorInput
  trustKey: StringQueryOperatorInput
  agentID: StringQueryOperatorInput
  licenseKey: StringQueryOperatorInput
  applicationID: StringQueryOperatorInput
  beacon: StringQueryOperatorInput
  errorBeacon: StringQueryOperatorInput
}

input SitePluginPluginOptionsConfigsStagingFilterInput {
  instrumentationType: StringQueryOperatorInput
  accountId: StringQueryOperatorInput
  trustKey: StringQueryOperatorInput
  agentID: StringQueryOperatorInput
  licenseKey: StringQueryOperatorInput
  applicationID: StringQueryOperatorInput
  beacon: StringQueryOperatorInput
  errorBeacon: StringQueryOperatorInput
}

input SitePluginPluginOptionsLayoutFilterInput {
  contentPadding: StringQueryOperatorInput
  maxWidth: StringQueryOperatorInput
  component: StringQueryOperatorInput
  mobileBreakpoint: StringQueryOperatorInput
}

input SitePluginPluginOptionsPrismFilterInput {
  languages: StringQueryOperatorInput
}

input SitePluginPluginOptionsSplitioFilterInput {
  core: SitePluginPluginOptionsSplitioCoreFilterInput
  features: SitePluginPluginOptionsSplitioFeaturesFilterInput
  env: SitePluginPluginOptionsSplitioEnvFilterInput
}

input SitePluginPluginOptionsSplitioCoreFilterInput {
  authorizationKey: StringQueryOperatorInput
}

input SitePluginPluginOptionsSplitioFeaturesFilterInput {
  free_account_button_color: SitePluginPluginOptionsSplitioFeaturesFree_account_button_colorFilterInput
}

input SitePluginPluginOptionsSplitioFeaturesFree_account_button_colorFilterInput {
  treatment: StringQueryOperatorInput
}

input SitePluginPluginOptionsSplitioEnvFilterInput {
  development: SitePluginPluginOptionsSplitioEnvDevelopmentFilterInput
}

input SitePluginPluginOptionsSplitioEnvDevelopmentFilterInput {
  features: SitePluginPluginOptionsSplitioEnvDevelopmentFeaturesFilterInput
  core: SitePluginPluginOptionsSplitioEnvDevelopmentCoreFilterInput
}

input SitePluginPluginOptionsSplitioEnvDevelopmentFeaturesFilterInput {
  developer_website_global_header_gh_buttons: StringQueryOperatorInput
  developer_website_right_rail_buttons: StringQueryOperatorInput
  super_tiles: StringQueryOperatorInput
}

input SitePluginPluginOptionsSplitioEnvDevelopmentCoreFilterInput {
  authorizationKey: StringQueryOperatorInput
}

input SitePluginPluginOptionsRelatedResourcesFilterInput {
  swiftype: SitePluginPluginOptionsRelatedResourcesSwiftypeFilterInput
}

input SitePluginPluginOptionsRelatedResourcesSwiftypeFilterInput {
  resultsPath: StringQueryOperatorInput
  refetch: BooleanQueryOperatorInput
  engineKey: StringQueryOperatorInput
  limit: IntQueryOperatorInput
}

input SitePluginPluginOptionsNewrelicFilterInput {
  configs: SitePluginPluginOptionsNewrelicConfigsFilterInput
}

input SitePluginPluginOptionsNewrelicConfigsFilterInput {
  production: SitePluginPluginOptionsNewrelicConfigsProductionFilterInput
  staging: SitePluginPluginOptionsNewrelicConfigsStagingFilterInput
}

input SitePluginPluginOptionsNewrelicConfigsProductionFilterInput {
  instrumentationType: StringQueryOperatorInput
  accountId: StringQueryOperatorInput
  trustKey: StringQueryOperatorInput
  agentID: StringQueryOperatorInput
  licenseKey: StringQueryOperatorInput
  applicationID: StringQueryOperatorInput
  beacon: StringQueryOperatorInput
  errorBeacon: StringQueryOperatorInput
}

input SitePluginPluginOptionsNewrelicConfigsStagingFilterInput {
  instrumentationType: StringQueryOperatorInput
  accountId: StringQueryOperatorInput
  trustKey: StringQueryOperatorInput
  agentID: StringQueryOperatorInput
  licenseKey: StringQueryOperatorInput
  applicationID: StringQueryOperatorInput
  beacon: StringQueryOperatorInput
  errorBeacon: StringQueryOperatorInput
}

input SitePluginPluginOptionsTessenFilterInput {
  tessenVersion: StringQueryOperatorInput
  product: StringQueryOperatorInput
  subproduct: StringQueryOperatorInput
  segmentWriteKey: StringQueryOperatorInput
  trackPageViews: BooleanQueryOperatorInput
  pageView: SitePluginPluginOptionsTessenPageViewFilterInput
}

input SitePluginPluginOptionsTessenPageViewFilterInput {
  eventName: StringQueryOperatorInput
  category: StringQueryOperatorInput
}

input SitePluginPluginOptionsImplementationFilterInput {
  info: StringQueryOperatorInput
}

input SitePluginPluginOptionsGatsbyRemarkPluginsFilterListInput {
  elemMatch: SitePluginPluginOptionsGatsbyRemarkPluginsFilterInput
}

input SitePluginPluginOptionsGatsbyRemarkPluginsFilterInput {
  resolve: StringQueryOperatorInput
  options: SitePluginPluginOptionsGatsbyRemarkPluginsOptionsFilterInput
}

input SitePluginPluginOptionsGatsbyRemarkPluginsOptionsFilterInput {
  maxHeight: IntQueryOperatorInput
  maxWidth: IntQueryOperatorInput
  fit: StringQueryOperatorInput
  linkImagesToOriginal: BooleanQueryOperatorInput
  icon: StringQueryOperatorInput
}

input SitePluginPluginOptionsGoogleAnalyticsFilterInput {
  trackingId: StringQueryOperatorInput
  autoStart: BooleanQueryOperatorInput
  anonymize: BooleanQueryOperatorInput
  controlCookieName: StringQueryOperatorInput
}

input SitePluginPluginOptionsEmitSchemaFilterInput {
  src___generated___gatsby_schema_graphql: BooleanQueryOperatorInput
}

input SitePluginPackageJsonFilterInput {
  name: StringQueryOperatorInput
  description: StringQueryOperatorInput
  version: StringQueryOperatorInput
  main: StringQueryOperatorInput
  license: StringQueryOperatorInput
  dependencies: SitePluginPackageJsonDependenciesFilterListInput
  devDependencies: SitePluginPackageJsonDevDependenciesFilterListInput
  peerDependencies: SitePluginPackageJsonPeerDependenciesFilterListInput
  keywords: StringQueryOperatorInput
}

input SitePluginPackageJsonDependenciesFilterListInput {
  elemMatch: SitePluginPackageJsonDependenciesFilterInput
}

input SitePluginPackageJsonDependenciesFilterInput {
  name: StringQueryOperatorInput
  version: StringQueryOperatorInput
}

input SitePluginPackageJsonDevDependenciesFilterListInput {
  elemMatch: SitePluginPackageJsonDevDependenciesFilterInput
}

input SitePluginPackageJsonDevDependenciesFilterInput {
  name: StringQueryOperatorInput
  version: StringQueryOperatorInput
}

input SitePluginPackageJsonPeerDependenciesFilterListInput {
  elemMatch: SitePluginPackageJsonPeerDependenciesFilterInput
}

input SitePluginPackageJsonPeerDependenciesFilterInput {
  name: StringQueryOperatorInput
  version: StringQueryOperatorInput
}

input SitePageContextFilterInput {
  layout: StringQueryOperatorInput
  themeOptions: SitePageContextThemeOptionsFilterInput
  swiftypeEngineKey: StringQueryOperatorInput
  fileRelativePath: StringQueryOperatorInput
  locale: StringQueryOperatorInput
  slug: StringQueryOperatorInput
  guidesFilter: StringQueryOperatorInput
}

input SitePageContextThemeOptionsFilterInput {
  oneTrustID: StringQueryOperatorInput
  forceTrailingSlashes: BooleanQueryOperatorInput
  layout: SitePageContextThemeOptionsLayoutFilterInput
  prism: SitePageContextThemeOptionsPrismFilterInput
  splitio: SitePageContextThemeOptionsSplitioFilterInput
  relatedResources: SitePageContextThemeOptionsRelatedResourcesFilterInput
  newrelic: SitePageContextThemeOptionsNewrelicFilterInput
  tessen: SitePageContextThemeOptionsTessenFilterInput
}

input SitePageContextThemeOptionsLayoutFilterInput {
  contentPadding: StringQueryOperatorInput
  maxWidth: StringQueryOperatorInput
  component: StringQueryOperatorInput
  mobileBreakpoint: StringQueryOperatorInput
}

input SitePageContextThemeOptionsPrismFilterInput {
  languages: StringQueryOperatorInput
}

input SitePageContextThemeOptionsSplitioFilterInput {
  core: SitePageContextThemeOptionsSplitioCoreFilterInput
  features: SitePageContextThemeOptionsSplitioFeaturesFilterInput
  env: SitePageContextThemeOptionsSplitioEnvFilterInput
}

input SitePageContextThemeOptionsSplitioCoreFilterInput {
  authorizationKey: StringQueryOperatorInput
}

input SitePageContextThemeOptionsSplitioFeaturesFilterInput {
  free_account_button_color: SitePageContextThemeOptionsSplitioFeaturesFree_account_button_colorFilterInput
}

input SitePageContextThemeOptionsSplitioFeaturesFree_account_button_colorFilterInput {
  treatment: StringQueryOperatorInput
}

input SitePageContextThemeOptionsSplitioEnvFilterInput {
  development: SitePageContextThemeOptionsSplitioEnvDevelopmentFilterInput
}

input SitePageContextThemeOptionsSplitioEnvDevelopmentFilterInput {
  features: SitePageContextThemeOptionsSplitioEnvDevelopmentFeaturesFilterInput
  core: SitePageContextThemeOptionsSplitioEnvDevelopmentCoreFilterInput
}

input SitePageContextThemeOptionsSplitioEnvDevelopmentFeaturesFilterInput {
  developer_website_global_header_gh_buttons: StringQueryOperatorInput
  developer_website_right_rail_buttons: StringQueryOperatorInput
  super_tiles: StringQueryOperatorInput
}

input SitePageContextThemeOptionsSplitioEnvDevelopmentCoreFilterInput {
  authorizationKey: StringQueryOperatorInput
}

input SitePageContextThemeOptionsRelatedResourcesFilterInput {
  swiftype: SitePageContextThemeOptionsRelatedResourcesSwiftypeFilterInput
}

input SitePageContextThemeOptionsRelatedResourcesSwiftypeFilterInput {
  resultsPath: StringQueryOperatorInput
  refetch: BooleanQueryOperatorInput
  engineKey: StringQueryOperatorInput
  limit: IntQueryOperatorInput
}

input SitePageContextThemeOptionsNewrelicFilterInput {
  configs: SitePageContextThemeOptionsNewrelicConfigsFilterInput
}

input SitePageContextThemeOptionsNewrelicConfigsFilterInput {
  production: SitePageContextThemeOptionsNewrelicConfigsProductionFilterInput
  staging: SitePageContextThemeOptionsNewrelicConfigsStagingFilterInput
}

input SitePageContextThemeOptionsNewrelicConfigsProductionFilterInput {
  instrumentationType: StringQueryOperatorInput
  accountId: StringQueryOperatorInput
  trustKey: StringQueryOperatorInput
  agentID: StringQueryOperatorInput
  licenseKey: StringQueryOperatorInput
  applicationID: StringQueryOperatorInput
  beacon: StringQueryOperatorInput
  errorBeacon: StringQueryOperatorInput
}

input SitePageContextThemeOptionsNewrelicConfigsStagingFilterInput {
  instrumentationType: StringQueryOperatorInput
  accountId: StringQueryOperatorInput
  trustKey: StringQueryOperatorInput
  agentID: StringQueryOperatorInput
  licenseKey: StringQueryOperatorInput
  applicationID: StringQueryOperatorInput
  beacon: StringQueryOperatorInput
  errorBeacon: StringQueryOperatorInput
}

input SitePageContextThemeOptionsTessenFilterInput {
  tessenVersion: StringQueryOperatorInput
  product: StringQueryOperatorInput
  subproduct: StringQueryOperatorInput
  segmentWriteKey: StringQueryOperatorInput
  trackPageViews: BooleanQueryOperatorInput
  pageView: SitePageContextThemeOptionsTessenPageViewFilterInput
}

input SitePageContextThemeOptionsTessenPageViewFilterInput {
  eventName: StringQueryOperatorInput
  category: StringQueryOperatorInput
}

type SitePageConnection {
  totalCount: Int!
  edges: [SitePageEdge!]!
  nodes: [SitePage!]!
  pageInfo: PageInfo!
  distinct(field: SitePageFieldsEnum!): [String!]!
  max(field: SitePageFieldsEnum!): Float
  min(field: SitePageFieldsEnum!): Float
  sum(field: SitePageFieldsEnum!): Float
  group(skip: Int, limit: Int, field: SitePageFieldsEnum!): [SitePageGroupConnection!]!
}

type SitePageEdge {
  next: SitePage
  node: SitePage!
  previous: SitePage
}

enum SitePageFieldsEnum {
  path
  component
  internalComponentName
  componentChunkName
  matchPath
  isCreatedByStatefulCreatePages
  pluginCreator___resolve
  pluginCreator___name
  pluginCreator___version
  pluginCreator___nodeAPIs
  pluginCreator___browserAPIs
  pluginCreator___ssrAPIs
  pluginCreator___pluginFilepath
  pluginCreator___pluginOptions___base64Width
  pluginCreator___pluginOptions___stripMetadata
  pluginCreator___pluginOptions___defaultQuality
  pluginCreator___pluginOptions___failOnError
  pluginCreator___pluginOptions___sourceMap
  pluginCreator___pluginOptions___autoLabel
  pluginCreator___pluginOptions___labelFormat
  pluginCreator___pluginOptions___cssPropOptimization
  pluginCreator___pluginOptions___output
  pluginCreator___pluginOptions___createLinkInHead
  pluginCreator___pluginOptions___entryLimit
  pluginCreator___pluginOptions___query
  pluginCreator___pluginOptions___classNameDark
  pluginCreator___pluginOptions___classNameLight
  pluginCreator___pluginOptions___storageKey
  pluginCreator___pluginOptions___minify
  pluginCreator___pluginOptions___component
  pluginCreator___pluginOptions___name
  pluginCreator___pluginOptions___path
  pluginCreator___pluginOptions___sitemap
  pluginCreator___pluginOptions___policy
  pluginCreator___pluginOptions___policy___userAgent
  pluginCreator___pluginOptions___policy___allow
  pluginCreator___pluginOptions___oneTrustID
  pluginCreator___pluginOptions___forceTrailingSlashes
  pluginCreator___pluginOptions___layout___contentPadding
  pluginCreator___pluginOptions___layout___maxWidth
  pluginCreator___pluginOptions___layout___component
  pluginCreator___pluginOptions___layout___mobileBreakpoint
  pluginCreator___pluginOptions___prism___languages
  pluginCreator___pluginOptions___tessen___tessenVersion
  pluginCreator___pluginOptions___tessen___product
  pluginCreator___pluginOptions___tessen___subproduct
  pluginCreator___pluginOptions___tessen___segmentWriteKey
  pluginCreator___pluginOptions___tessen___trackPageViews
  pluginCreator___pluginOptions___implementation___info
  pluginCreator___pluginOptions___short_name
  pluginCreator___pluginOptions___start_url
  pluginCreator___pluginOptions___background_color
  pluginCreator___pluginOptions___theme_color
  pluginCreator___pluginOptions___display
  pluginCreator___pluginOptions___icon
  pluginCreator___pluginOptions___legacy
  pluginCreator___pluginOptions___theme_color_in_head
  pluginCreator___pluginOptions___cache_busting_mode
  pluginCreator___pluginOptions___crossOrigin
  pluginCreator___pluginOptions___include_favicon
  pluginCreator___pluginOptions___cacheDigest
  pluginCreator___pluginOptions___maxWidth
  pluginCreator___pluginOptions___linkImagesToOriginal
  pluginCreator___pluginOptions___showCaptions
  pluginCreator___pluginOptions___markdownCaptions
  pluginCreator___pluginOptions___sizeByPixelDensity
  pluginCreator___pluginOptions___backgroundColor
  pluginCreator___pluginOptions___quality
  pluginCreator___pluginOptions___withWebp
  pluginCreator___pluginOptions___tracedSVG
  pluginCreator___pluginOptions___loading
  pluginCreator___pluginOptions___decoding
  pluginCreator___pluginOptions___disableBgImageOnAlpha
  pluginCreator___pluginOptions___disableBgImage
  pluginCreator___pluginOptions___gatsbyRemarkPlugins
  pluginCreator___pluginOptions___gatsbyRemarkPlugins___resolve
  pluginCreator___pluginOptions___extensions
  pluginCreator___pluginOptions___lessBabel
  pluginCreator___pluginOptions___mediaTypes
  pluginCreator___pluginOptions___root
  pluginCreator___pluginOptions___release
  pluginCreator___pluginOptions___debug
  pluginCreator___pluginOptions___googleAnalytics___trackingId
  pluginCreator___pluginOptions___googleAnalytics___autoStart
  pluginCreator___pluginOptions___googleAnalytics___anonymize
  pluginCreator___pluginOptions___googleAnalytics___controlCookieName
  pluginCreator___pluginOptions___environments
  pluginCreator___pluginOptions___allPageHeaders
  pluginCreator___pluginOptions___outputPath
  pluginCreator___pluginOptions___emitSchema___src___generated___gatsby_schema_graphql
  pluginCreator___pluginOptions___isTSX
  pluginCreator___pluginOptions___jsxPragma
  pluginCreator___pluginOptions___allExtensions
  pluginCreator___pluginOptions___pathCheck
  pluginCreator___packageJson___name
  pluginCreator___packageJson___description
  pluginCreator___packageJson___version
  pluginCreator___packageJson___main
  pluginCreator___packageJson___license
  pluginCreator___packageJson___dependencies
  pluginCreator___packageJson___dependencies___name
  pluginCreator___packageJson___dependencies___version
  pluginCreator___packageJson___devDependencies
  pluginCreator___packageJson___devDependencies___name
  pluginCreator___packageJson___devDependencies___version
  pluginCreator___packageJson___peerDependencies
  pluginCreator___packageJson___peerDependencies___name
  pluginCreator___packageJson___peerDependencies___version
  pluginCreator___packageJson___keywords
  pluginCreator___id
  pluginCreator___parent___id
  pluginCreator___parent___parent___id
  pluginCreator___parent___parent___children
  pluginCreator___parent___children
  pluginCreator___parent___children___id
  pluginCreator___parent___children___children
  pluginCreator___parent___internal___content
  pluginCreator___parent___internal___contentDigest
  pluginCreator___parent___internal___description
  pluginCreator___parent___internal___fieldOwners
  pluginCreator___parent___internal___ignoreType
  pluginCreator___parent___internal___mediaType
  pluginCreator___parent___internal___owner
  pluginCreator___parent___internal___type
  pluginCreator___children
  pluginCreator___children___id
  pluginCreator___children___parent___id
  pluginCreator___children___parent___children
  pluginCreator___children___children
  pluginCreator___children___children___id
  pluginCreator___children___children___children
  pluginCreator___children___internal___content
  pluginCreator___children___internal___contentDigest
  pluginCreator___children___internal___description
  pluginCreator___children___internal___fieldOwners
  pluginCreator___children___internal___ignoreType
  pluginCreator___children___internal___mediaType
  pluginCreator___children___internal___owner
  pluginCreator___children___internal___type
  pluginCreator___internal___content
  pluginCreator___internal___contentDigest
  pluginCreator___internal___description
  pluginCreator___internal___fieldOwners
  pluginCreator___internal___ignoreType
  pluginCreator___internal___mediaType
  pluginCreator___internal___owner
  pluginCreator___internal___type
  pluginCreatorId
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  context___layout
  context___themeOptions___oneTrustID
  context___themeOptions___forceTrailingSlashes
  context___themeOptions___layout___contentPadding
  context___themeOptions___layout___maxWidth
  context___themeOptions___layout___component
  context___themeOptions___layout___mobileBreakpoint
  context___themeOptions___prism___languages
  context___themeOptions___tessen___tessenVersion
  context___themeOptions___tessen___product
  context___themeOptions___tessen___subproduct
  context___themeOptions___tessen___segmentWriteKey
  context___themeOptions___tessen___trackPageViews
  context___swiftypeEngineKey
  context___fileRelativePath
  context___locale
  context___slug
  context___guidesFilter
}

type SitePageGroupConnection {
  totalCount: Int!
  edges: [SitePageEdge!]!
  nodes: [SitePage!]!
  pageInfo: PageInfo!
  distinct(field: SitePageFieldsEnum!): [String!]!
  max(field: SitePageFieldsEnum!): Float
  min(field: SitePageFieldsEnum!): Float
  sum(field: SitePageFieldsEnum!): Float
  group(skip: Int, limit: Int, field: SitePageFieldsEnum!): [SitePageGroupConnection!]!
  field: String!
  fieldValue: String
}

input SitePageFilterInput {
  path: StringQueryOperatorInput
  component: StringQueryOperatorInput
  internalComponentName: StringQueryOperatorInput
  componentChunkName: StringQueryOperatorInput
  matchPath: StringQueryOperatorInput
  isCreatedByStatefulCreatePages: BooleanQueryOperatorInput
  pluginCreator: SitePluginFilterInput
  pluginCreatorId: StringQueryOperatorInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
  context: SitePageContextFilterInput
}

input SitePageSortInput {
  fields: [SitePageFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type SitePluginConnection {
  totalCount: Int!
  edges: [SitePluginEdge!]!
  nodes: [SitePlugin!]!
  pageInfo: PageInfo!
  distinct(field: SitePluginFieldsEnum!): [String!]!
  max(field: SitePluginFieldsEnum!): Float
  min(field: SitePluginFieldsEnum!): Float
  sum(field: SitePluginFieldsEnum!): Float
  group(skip: Int, limit: Int, field: SitePluginFieldsEnum!): [SitePluginGroupConnection!]!
}

type SitePluginEdge {
  next: SitePlugin
  node: SitePlugin!
  previous: SitePlugin
}

enum SitePluginFieldsEnum {
  resolve
  name
  version
  nodeAPIs
  browserAPIs
  ssrAPIs
  pluginFilepath
  pluginOptions___base64Width
  pluginOptions___stripMetadata
  pluginOptions___defaultQuality
  pluginOptions___failOnError
  pluginOptions___sourceMap
  pluginOptions___autoLabel
  pluginOptions___labelFormat
  pluginOptions___cssPropOptimization
  pluginOptions___output
  pluginOptions___createLinkInHead
  pluginOptions___entryLimit
  pluginOptions___query
  pluginOptions___classNameDark
  pluginOptions___classNameLight
  pluginOptions___storageKey
  pluginOptions___minify
  pluginOptions___component
  pluginOptions___name
  pluginOptions___path
  pluginOptions___sitemap
  pluginOptions___policy
  pluginOptions___policy___userAgent
  pluginOptions___policy___allow
  pluginOptions___configs___production___instrumentationType
  pluginOptions___configs___production___accountId
  pluginOptions___configs___production___trustKey
  pluginOptions___configs___production___agentID
  pluginOptions___configs___production___licenseKey
  pluginOptions___configs___production___applicationID
  pluginOptions___configs___production___beacon
  pluginOptions___configs___production___errorBeacon
  pluginOptions___configs___staging___instrumentationType
  pluginOptions___configs___staging___accountId
  pluginOptions___configs___staging___trustKey
  pluginOptions___configs___staging___agentID
  pluginOptions___configs___staging___licenseKey
  pluginOptions___configs___staging___applicationID
  pluginOptions___configs___staging___beacon
  pluginOptions___configs___staging___errorBeacon
  pluginOptions___oneTrustID
  pluginOptions___forceTrailingSlashes
  pluginOptions___layout___contentPadding
  pluginOptions___layout___maxWidth
  pluginOptions___layout___component
  pluginOptions___layout___mobileBreakpoint
  pluginOptions___prism___languages
  pluginOptions___splitio___core___authorizationKey
  pluginOptions___relatedResources___swiftype___resultsPath
  pluginOptions___relatedResources___swiftype___refetch
  pluginOptions___relatedResources___swiftype___engineKey
  pluginOptions___relatedResources___swiftype___limit
  pluginOptions___tessen___tessenVersion
  pluginOptions___tessen___product
  pluginOptions___tessen___subproduct
  pluginOptions___tessen___segmentWriteKey
  pluginOptions___tessen___trackPageViews
  pluginOptions___tessen___pageView___eventName
  pluginOptions___tessen___pageView___category
  pluginOptions___implementation___info
  pluginOptions___short_name
  pluginOptions___start_url
  pluginOptions___background_color
  pluginOptions___theme_color
  pluginOptions___display
  pluginOptions___icon
  pluginOptions___legacy
  pluginOptions___theme_color_in_head
  pluginOptions___cache_busting_mode
  pluginOptions___crossOrigin
  pluginOptions___include_favicon
  pluginOptions___cacheDigest
  pluginOptions___maxWidth
  pluginOptions___linkImagesToOriginal
  pluginOptions___showCaptions
  pluginOptions___markdownCaptions
  pluginOptions___sizeByPixelDensity
  pluginOptions___backgroundColor
  pluginOptions___quality
  pluginOptions___withWebp
  pluginOptions___tracedSVG
  pluginOptions___loading
  pluginOptions___decoding
  pluginOptions___disableBgImageOnAlpha
  pluginOptions___disableBgImage
  pluginOptions___gatsbyRemarkPlugins
  pluginOptions___gatsbyRemarkPlugins___resolve
  pluginOptions___gatsbyRemarkPlugins___options___maxHeight
  pluginOptions___gatsbyRemarkPlugins___options___maxWidth
  pluginOptions___gatsbyRemarkPlugins___options___fit
  pluginOptions___gatsbyRemarkPlugins___options___linkImagesToOriginal
  pluginOptions___gatsbyRemarkPlugins___options___icon
  pluginOptions___extensions
  pluginOptions___lessBabel
  pluginOptions___mediaTypes
  pluginOptions___root
  pluginOptions___release
  pluginOptions___debug
  pluginOptions___googleAnalytics___trackingId
  pluginOptions___googleAnalytics___autoStart
  pluginOptions___googleAnalytics___anonymize
  pluginOptions___googleAnalytics___controlCookieName
  pluginOptions___environments
  pluginOptions___allPageHeaders
  pluginOptions___outputPath
  pluginOptions___emitSchema___src___generated___gatsby_schema_graphql
  pluginOptions___isTSX
  pluginOptions___jsxPragma
  pluginOptions___allExtensions
  pluginOptions___pathCheck
  packageJson___name
  packageJson___description
  packageJson___version
  packageJson___main
  packageJson___license
  packageJson___dependencies
  packageJson___dependencies___name
  packageJson___dependencies___version
  packageJson___devDependencies
  packageJson___devDependencies___name
  packageJson___devDependencies___version
  packageJson___peerDependencies
  packageJson___peerDependencies___name
  packageJson___peerDependencies___version
  packageJson___keywords
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

type SitePluginGroupConnection {
  totalCount: Int!
  edges: [SitePluginEdge!]!
  nodes: [SitePlugin!]!
  pageInfo: PageInfo!
  distinct(field: SitePluginFieldsEnum!): [String!]!
  max(field: SitePluginFieldsEnum!): Float
  min(field: SitePluginFieldsEnum!): Float
  sum(field: SitePluginFieldsEnum!): Float
  group(skip: Int, limit: Int, field: SitePluginFieldsEnum!): [SitePluginGroupConnection!]!
  field: String!
  fieldValue: String
}

input SitePluginSortInput {
  fields: [SitePluginFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type SiteBuildMetadataConnection {
  totalCount: Int!
  edges: [SiteBuildMetadataEdge!]!
  nodes: [SiteBuildMetadata!]!
  pageInfo: PageInfo!
  distinct(field: SiteBuildMetadataFieldsEnum!): [String!]!
  max(field: SiteBuildMetadataFieldsEnum!): Float
  min(field: SiteBuildMetadataFieldsEnum!): Float
  sum(field: SiteBuildMetadataFieldsEnum!): Float
  group(skip: Int, limit: Int, field: SiteBuildMetadataFieldsEnum!): [SiteBuildMetadataGroupConnection!]!
}

type SiteBuildMetadataEdge {
  next: SiteBuildMetadata
  node: SiteBuildMetadata!
  previous: SiteBuildMetadata
}

enum SiteBuildMetadataFieldsEnum {
  buildTime
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

type SiteBuildMetadataGroupConnection {
  totalCount: Int!
  edges: [SiteBuildMetadataEdge!]!
  nodes: [SiteBuildMetadata!]!
  pageInfo: PageInfo!
  distinct(field: SiteBuildMetadataFieldsEnum!): [String!]!
  max(field: SiteBuildMetadataFieldsEnum!): Float
  min(field: SiteBuildMetadataFieldsEnum!): Float
  sum(field: SiteBuildMetadataFieldsEnum!): Float
  group(skip: Int, limit: Int, field: SiteBuildMetadataFieldsEnum!): [SiteBuildMetadataGroupConnection!]!
  field: String!
  fieldValue: String
}

input SiteBuildMetadataFilterInput {
  buildTime: DateQueryOperatorInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input SiteBuildMetadataSortInput {
  fields: [SiteBuildMetadataFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type ImageSharpConnection {
  totalCount: Int!
  edges: [ImageSharpEdge!]!
  nodes: [ImageSharp!]!
  pageInfo: PageInfo!
  distinct(field: ImageSharpFieldsEnum!): [String!]!
  max(field: ImageSharpFieldsEnum!): Float
  min(field: ImageSharpFieldsEnum!): Float
  sum(field: ImageSharpFieldsEnum!): Float
  group(skip: Int, limit: Int, field: ImageSharpFieldsEnum!): [ImageSharpGroupConnection!]!
}

type ImageSharpEdge {
  next: ImageSharp
  node: ImageSharp!
  previous: ImageSharp
}

enum ImageSharpFieldsEnum {
  fixed___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___originalImg @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___presentationWidth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___presentationHeight @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  original___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  original___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  original___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resize___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resize___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resize___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resize___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resize___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resize___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
}

type ImageSharpGroupConnection {
  totalCount: Int!
  edges: [ImageSharpEdge!]!
  nodes: [ImageSharp!]!
  pageInfo: PageInfo!
  distinct(field: ImageSharpFieldsEnum!): [String!]!
  max(field: ImageSharpFieldsEnum!): Float
  min(field: ImageSharpFieldsEnum!): Float
  sum(field: ImageSharpFieldsEnum!): Float
  group(skip: Int, limit: Int, field: ImageSharpFieldsEnum!): [ImageSharpGroupConnection!]!
  field: String!
  fieldValue: String
}

input ImageSharpSortInput {
  fields: [ImageSharpFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type LocaleConnection {
  totalCount: Int!
  edges: [LocaleEdge!]!
  nodes: [Locale!]!
  pageInfo: PageInfo!
  distinct(field: LocaleFieldsEnum!): [String!]!
  max(field: LocaleFieldsEnum!): Float
  min(field: LocaleFieldsEnum!): Float
  sum(field: LocaleFieldsEnum!): Float
  group(skip: Int, limit: Int, field: LocaleFieldsEnum!): [LocaleGroupConnection!]!
}

type LocaleEdge {
  next: Locale
  node: Locale!
  previous: Locale
}

enum LocaleFieldsEnum {
  name
  localName
  locale
  hrefLang
  isDefault
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

type LocaleGroupConnection {
  totalCount: Int!
  edges: [LocaleEdge!]!
  nodes: [Locale!]!
  pageInfo: PageInfo!
  distinct(field: LocaleFieldsEnum!): [String!]!
  max(field: LocaleFieldsEnum!): Float
  min(field: LocaleFieldsEnum!): Float
  sum(field: LocaleFieldsEnum!): Float
  group(skip: Int, limit: Int, field: LocaleFieldsEnum!): [LocaleGroupConnection!]!
  field: String!
  fieldValue: String
}

input LocaleFilterInput {
  name: StringQueryOperatorInput
  localName: StringQueryOperatorInput
  locale: StringQueryOperatorInput
  hrefLang: StringQueryOperatorInput
  isDefault: BooleanQueryOperatorInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input LocaleSortInput {
  fields: [LocaleFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type RelatedResourceConnection {
  totalCount: Int!
  edges: [RelatedResourceEdge!]!
  nodes: [RelatedResource!]!
  pageInfo: PageInfo!
  distinct(field: RelatedResourceFieldsEnum!): [String!]!
  max(field: RelatedResourceFieldsEnum!): Float
  min(field: RelatedResourceFieldsEnum!): Float
  sum(field: RelatedResourceFieldsEnum!): Float
  group(skip: Int, limit: Int, field: RelatedResourceFieldsEnum!): [RelatedResourceGroupConnection!]!
}

type RelatedResourceEdge {
  next: RelatedResource
  node: RelatedResource!
  previous: RelatedResource
}

enum RelatedResourceFieldsEnum {
  id
  title
  url
  plugin
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

type RelatedResourceGroupConnection {
  totalCount: Int!
  edges: [RelatedResourceEdge!]!
  nodes: [RelatedResource!]!
  pageInfo: PageInfo!
  distinct(field: RelatedResourceFieldsEnum!): [String!]!
  max(field: RelatedResourceFieldsEnum!): Float
  min(field: RelatedResourceFieldsEnum!): Float
  sum(field: RelatedResourceFieldsEnum!): Float
  group(skip: Int, limit: Int, field: RelatedResourceFieldsEnum!): [RelatedResourceGroupConnection!]!
  field: String!
  fieldValue: String
}

input RelatedResourceSortInput {
  fields: [RelatedResourceFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input NewRelicThemeRelatedResourceConfigFilterInput {
  labels: RelatedResourceLabelFilterListInput
}

input RelatedResourceLabelFilterListInput {
  elemMatch: RelatedResourceLabelFilterInput
}

input RelatedResourceLabelFilterInput {
  baseUrl: StringQueryOperatorInput
  label: StringQueryOperatorInput
}

input NewRelicThemeTessenConfigFilterInput {
  product: StringQueryOperatorInput
  subproduct: StringQueryOperatorInput
}

type NewRelicThemeConfigConnection {
  totalCount: Int!
  edges: [NewRelicThemeConfigEdge!]!
  nodes: [NewRelicThemeConfig!]!
  pageInfo: PageInfo!
  distinct(field: NewRelicThemeConfigFieldsEnum!): [String!]!
  max(field: NewRelicThemeConfigFieldsEnum!): Float
  min(field: NewRelicThemeConfigFieldsEnum!): Float
  sum(field: NewRelicThemeConfigFieldsEnum!): Float
  group(skip: Int, limit: Int, field: NewRelicThemeConfigFieldsEnum!): [NewRelicThemeConfigGroupConnection!]!
}

type NewRelicThemeConfigEdge {
  next: NewRelicThemeConfig
  node: NewRelicThemeConfig!
  previous: NewRelicThemeConfig
}

enum NewRelicThemeConfigFieldsEnum {
  env
  relatedResources___labels
  relatedResources___labels___baseUrl
  relatedResources___labels___label
  tessen___product
  tessen___subproduct
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

type NewRelicThemeConfigGroupConnection {
  totalCount: Int!
  edges: [NewRelicThemeConfigEdge!]!
  nodes: [NewRelicThemeConfig!]!
  pageInfo: PageInfo!
  distinct(field: NewRelicThemeConfigFieldsEnum!): [String!]!
  max(field: NewRelicThemeConfigFieldsEnum!): Float
  min(field: NewRelicThemeConfigFieldsEnum!): Float
  sum(field: NewRelicThemeConfigFieldsEnum!): Float
  group(skip: Int, limit: Int, field: NewRelicThemeConfigFieldsEnum!): [NewRelicThemeConfigGroupConnection!]!
  field: String!
  fieldValue: String
}

input NewRelicThemeConfigFilterInput {
  env: StringQueryOperatorInput
  relatedResources: NewRelicThemeRelatedResourceConfigFilterInput
  tessen: NewRelicThemeTessenConfigFilterInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input NewRelicThemeConfigSortInput {
  fields: [NewRelicThemeConfigFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input MarkdownHeadingFilterListInput {
  elemMatch: MarkdownHeadingFilterInput
}

input MarkdownHeadingFilterInput {
  id: StringQueryOperatorInput
  value: StringQueryOperatorInput
  depth: IntQueryOperatorInput
}

input MarkdownWordCountFilterInput {
  paragraphs: IntQueryOperatorInput
  sentences: IntQueryOperatorInput
  words: IntQueryOperatorInput
}

type MarkdownRemarkConnection {
  totalCount: Int!
  edges: [MarkdownRemarkEdge!]!
  nodes: [MarkdownRemark!]!
  pageInfo: PageInfo!
  distinct(field: MarkdownRemarkFieldsEnum!): [String!]!
  max(field: MarkdownRemarkFieldsEnum!): Float
  min(field: MarkdownRemarkFieldsEnum!): Float
  sum(field: MarkdownRemarkFieldsEnum!): Float
  group(skip: Int, limit: Int, field: MarkdownRemarkFieldsEnum!): [MarkdownRemarkGroupConnection!]!
}

type MarkdownRemarkEdge {
  next: MarkdownRemark
  node: MarkdownRemark!
  previous: MarkdownRemark
}

enum MarkdownRemarkFieldsEnum {
  id
  html
  htmlAst
  excerpt @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  excerptAst @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  headings @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  headings___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  headings___value @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  headings___depth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  timeToRead @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  tableOfContents @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  wordCount___paragraphs @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  wordCount___sentences @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  wordCount___words @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
}

type MarkdownRemarkGroupConnection {
  totalCount: Int!
  edges: [MarkdownRemarkEdge!]!
  nodes: [MarkdownRemark!]!
  pageInfo: PageInfo!
  distinct(field: MarkdownRemarkFieldsEnum!): [String!]!
  max(field: MarkdownRemarkFieldsEnum!): Float
  min(field: MarkdownRemarkFieldsEnum!): Float
  sum(field: MarkdownRemarkFieldsEnum!): Float
  group(skip: Int, limit: Int, field: MarkdownRemarkFieldsEnum!): [MarkdownRemarkGroupConnection!]!
  field: String!
  fieldValue: String
}

input MarkdownRemarkFilterInput {
  id: StringQueryOperatorInput
  html: StringQueryOperatorInput
  htmlAst: JSONQueryOperatorInput
  excerpt: StringQueryOperatorInput
  excerptAst: JSONQueryOperatorInput
  headings: MarkdownHeadingFilterListInput
  timeToRead: IntQueryOperatorInput
  tableOfContents: StringQueryOperatorInput
  wordCount: MarkdownWordCountFilterInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input MarkdownRemarkSortInput {
  fields: [MarkdownRemarkFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type MdxConnection {
  totalCount: Int!
  edges: [MdxEdge!]!
  nodes: [Mdx!]!
  pageInfo: PageInfo!
  distinct(field: MdxFieldsEnum!): [String!]!
  max(field: MdxFieldsEnum!): Float
  min(field: MdxFieldsEnum!): Float
  sum(field: MdxFieldsEnum!): Float
  group(skip: Int, limit: Int, field: MdxFieldsEnum!): [MdxGroupConnection!]!
}

type MdxEdge {
  next: Mdx
  node: Mdx!
  previous: Mdx
}

enum MdxFieldsEnum {
  rawBody
  fileAbsolutePath
  frontmatter___startDate
  frontmatter___endDate
  frontmatter___title
  frontmatter___path
  frontmatter___template
  frontmatter___description
  frontmatter___tileShorthand___title
  frontmatter___tileShorthand___description
  frontmatter___resources
  frontmatter___resources___title
  frontmatter___resources___url
  frontmatter___tags
  frontmatter___duration
  frontmatter___procIdx
  frontmatter___redirects
  frontmatter___promote
  slug
  body
  excerpt @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  headings @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  headings___value @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  headings___depth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  html @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  mdxAST @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  tableOfContents @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  timeToRead @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  wordCount___paragraphs @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  wordCount___sentences @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  wordCount___words @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fields___fileRelativePath @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fields___gitAuthorTime @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fields___slug @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenRelatedResource @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenRelatedResource___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenRelatedResource___title @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenRelatedResource___url @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenRelatedResource___plugin @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenRelatedResource___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenRelatedResource___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenRelatedResource___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenRelatedResource___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenRelatedResource___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenRelatedResource___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenRelatedResource___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenRelatedResource___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenRelatedResource___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenRelatedResource___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenRelatedResource___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenRelatedResource___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenRelatedResource___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenRelatedResource___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenRelatedResource___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenRelatedResource___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenRelatedResource___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenRelatedResource___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenRelatedResource___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenRelatedResource___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenRelatedResource___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenRelatedResource___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenRelatedResource___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenRelatedResource___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenRelatedResource___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenRelatedResource___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenRelatedResource___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenRelatedResource___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenRelatedResource___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenRelatedResource___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenRelatedResource___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenRelatedResource___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenRelatedResource___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenRelatedResource___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenRelatedResource___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenRelatedResource___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenRelatedResource___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childRelatedResource___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childRelatedResource___title @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childRelatedResource___url @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childRelatedResource___plugin @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childRelatedResource___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childRelatedResource___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childRelatedResource___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childRelatedResource___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childRelatedResource___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childRelatedResource___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childRelatedResource___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childRelatedResource___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childRelatedResource___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childRelatedResource___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childRelatedResource___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childRelatedResource___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childRelatedResource___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childRelatedResource___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childRelatedResource___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childRelatedResource___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childRelatedResource___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childRelatedResource___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childRelatedResource___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childRelatedResource___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childRelatedResource___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childRelatedResource___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childRelatedResource___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childRelatedResource___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childRelatedResource___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childRelatedResource___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childRelatedResource___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childRelatedResource___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childRelatedResource___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childRelatedResource___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childRelatedResource___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childRelatedResource___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childRelatedResource___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childRelatedResource___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childRelatedResource___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childRelatedResource___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childRelatedResource___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
}

type MdxGroupConnection {
  totalCount: Int!
  edges: [MdxEdge!]!
  nodes: [Mdx!]!
  pageInfo: PageInfo!
  distinct(field: MdxFieldsEnum!): [String!]!
  max(field: MdxFieldsEnum!): Float
  min(field: MdxFieldsEnum!): Float
  sum(field: MdxFieldsEnum!): Float
  group(skip: Int, limit: Int, field: MdxFieldsEnum!): [MdxGroupConnection!]!
  field: String!
  fieldValue: String
}

input MdxSortInput {
  fields: [MdxFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input NewRelicSdkConstantFilterListInput {
  elemMatch: NewRelicSdkConstantFilterInput
}

input NewRelicSdkConstantFilterInput {
  name: StringQueryOperatorInput
  value: JSONQueryOperatorInput
}

input NewRelicSdkExampleFilterListInput {
  elemMatch: NewRelicSdkExampleFilterInput
}

input NewRelicSdkExampleFilterInput {
  label: StringQueryOperatorInput
  sourceCode: StringQueryOperatorInput
  live: BooleanQueryOperatorInput
  preview: BooleanQueryOperatorInput
}

input NewRelicSdkPropTypeDefinitionFilterListInput {
  elemMatch: NewRelicSdkPropTypeDefinitionFilterInput
}

input NewRelicSdkPropTypeDefinitionFilterInput {
  name: StringQueryOperatorInput
  type: NewRelicSdkPropTypeDefinitionTypeFilterInput
  examples: NewRelicSdkExampleFilterListInput
  defaultValue: StringQueryOperatorInput
  description: StringQueryOperatorInput
  deprecation: NewRelicSdkComponentPropTypesDeprecationFilterInput
  isRequired: BooleanQueryOperatorInput
}

input NewRelicSdkPropTypeDefinitionTypeFilterInput {
  name: StringQueryOperatorInput
  raw: StringQueryOperatorInput
}

input NewRelicSdkComponentPropTypesDeprecationFilterInput {
  date: DateQueryOperatorInput
  signature: StringQueryOperatorInput
  description: StringQueryOperatorInput
}

input NewRelicSdkTypeDefinitionFilterListInput {
  elemMatch: NewRelicSdkTypeDefinitionFilterInput
}

input NewRelicSdkTypeDefinitionFilterInput {
  name: StringQueryOperatorInput
  properties: NewRelicSdkTypeDefinitionPropertyFilterListInput
}

input NewRelicSdkTypeDefinitionPropertyFilterListInput {
  elemMatch: NewRelicSdkTypeDefinitionPropertyFilterInput
}

input NewRelicSdkTypeDefinitionPropertyFilterInput {
  name: StringQueryOperatorInput
  description: StringQueryOperatorInput
  type: StringQueryOperatorInput
}

input NewRelicSdkMethodFilterListInput {
  elemMatch: NewRelicSdkMethodFilterInput
}

input NewRelicSdkMethodFilterInput {
  examples: NewRelicSdkExampleFilterListInput
  arguments: NewRelicSdkFunctionArgumentFilterListInput
  returnValue: NewRelicSdkFunctionReturnValueFilterInput
  name: StringQueryOperatorInput
  description: StringQueryOperatorInput
}

input NewRelicSdkFunctionArgumentFilterListInput {
  elemMatch: NewRelicSdkFunctionArgumentFilterInput
}

input NewRelicSdkFunctionArgumentFilterInput {
  description: StringQueryOperatorInput
  name: StringQueryOperatorInput
  type: StringQueryOperatorInput
  defaultValue: StringQueryOperatorInput
}

input NewRelicSdkFunctionReturnValueFilterInput {
  description: StringQueryOperatorInput
  type: StringQueryOperatorInput
  promiseType: StringQueryOperatorInput
}

input NewRelicSdkComponentFieldsFilterInput {
  slug: StringQueryOperatorInput
}

type NewRelicSdkComponentConnection {
  totalCount: Int!
  edges: [NewRelicSdkComponentEdge!]!
  nodes: [NewRelicSdkComponent!]!
  pageInfo: PageInfo!
  distinct(field: NewRelicSdkComponentFieldsEnum!): [String!]!
  max(field: NewRelicSdkComponentFieldsEnum!): Float
  min(field: NewRelicSdkComponentFieldsEnum!): Float
  sum(field: NewRelicSdkComponentFieldsEnum!): Float
  group(skip: Int, limit: Int, field: NewRelicSdkComponentFieldsEnum!): [NewRelicSdkComponentGroupConnection!]!
}

type NewRelicSdkComponentEdge {
  next: NewRelicSdkComponent
  node: NewRelicSdkComponent!
  previous: NewRelicSdkComponent
}

enum NewRelicSdkComponentFieldsEnum {
  constants
  constants___name
  constants___value
  examples
  examples___label
  examples___sourceCode
  examples___live
  examples___preview
  propTypes
  propTypes___name
  propTypes___type___name
  propTypes___type___raw
  propTypes___examples
  propTypes___examples___label
  propTypes___examples___sourceCode
  propTypes___examples___live
  propTypes___examples___preview
  propTypes___defaultValue
  propTypes___description
  propTypes___deprecation___date
  propTypes___deprecation___signature
  propTypes___deprecation___description
  propTypes___isRequired
  typeDefs
  typeDefs___name
  typeDefs___properties
  typeDefs___properties___name
  typeDefs___properties___description
  typeDefs___properties___type
  methods
  methods___examples
  methods___examples___label
  methods___examples___sourceCode
  methods___examples___live
  methods___examples___preview
  methods___arguments
  methods___arguments___description
  methods___arguments___name
  methods___arguments___type
  methods___arguments___defaultValue
  methods___returnValue___description
  methods___returnValue___type
  methods___returnValue___promiseType
  methods___name
  methods___description
  name
  usage
  description
  fields___slug
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

type NewRelicSdkComponentGroupConnection {
  totalCount: Int!
  edges: [NewRelicSdkComponentEdge!]!
  nodes: [NewRelicSdkComponent!]!
  pageInfo: PageInfo!
  distinct(field: NewRelicSdkComponentFieldsEnum!): [String!]!
  max(field: NewRelicSdkComponentFieldsEnum!): Float
  min(field: NewRelicSdkComponentFieldsEnum!): Float
  sum(field: NewRelicSdkComponentFieldsEnum!): Float
  group(skip: Int, limit: Int, field: NewRelicSdkComponentFieldsEnum!): [NewRelicSdkComponentGroupConnection!]!
  field: String!
  fieldValue: String
}

input NewRelicSdkComponentFilterInput {
  constants: NewRelicSdkConstantFilterListInput
  examples: NewRelicSdkExampleFilterListInput
  propTypes: NewRelicSdkPropTypeDefinitionFilterListInput
  typeDefs: NewRelicSdkTypeDefinitionFilterListInput
  methods: NewRelicSdkMethodFilterListInput
  name: StringQueryOperatorInput
  usage: StringQueryOperatorInput
  description: StringQueryOperatorInput
  fields: NewRelicSdkComponentFieldsFilterInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input NewRelicSdkComponentSortInput {
  fields: [NewRelicSdkComponentFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input NewRelicSdkApiFieldsFilterInput {
  slug: StringQueryOperatorInput
}

type NewRelicSdkApiConnection {
  totalCount: Int!
  edges: [NewRelicSdkApiEdge!]!
  nodes: [NewRelicSdkApi!]!
  pageInfo: PageInfo!
  distinct(field: NewRelicSdkApiFieldsEnum!): [String!]!
  max(field: NewRelicSdkApiFieldsEnum!): Float
  min(field: NewRelicSdkApiFieldsEnum!): Float
  sum(field: NewRelicSdkApiFieldsEnum!): Float
  group(skip: Int, limit: Int, field: NewRelicSdkApiFieldsEnum!): [NewRelicSdkApiGroupConnection!]!
}

type NewRelicSdkApiEdge {
  next: NewRelicSdkApi
  node: NewRelicSdkApi!
  previous: NewRelicSdkApi
}

enum NewRelicSdkApiFieldsEnum {
  constants
  constants___name
  constants___value
  examples
  examples___label
  examples___sourceCode
  examples___live
  examples___preview
  typeDefs
  typeDefs___name
  typeDefs___properties
  typeDefs___properties___name
  typeDefs___properties___description
  typeDefs___properties___type
  methods
  methods___examples
  methods___examples___label
  methods___examples___sourceCode
  methods___examples___live
  methods___examples___preview
  methods___arguments
  methods___arguments___description
  methods___arguments___name
  methods___arguments___type
  methods___arguments___defaultValue
  methods___returnValue___description
  methods___returnValue___type
  methods___returnValue___promiseType
  methods___name
  methods___description
  name
  usage
  description
  fields___slug
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

type NewRelicSdkApiGroupConnection {
  totalCount: Int!
  edges: [NewRelicSdkApiEdge!]!
  nodes: [NewRelicSdkApi!]!
  pageInfo: PageInfo!
  distinct(field: NewRelicSdkApiFieldsEnum!): [String!]!
  max(field: NewRelicSdkApiFieldsEnum!): Float
  min(field: NewRelicSdkApiFieldsEnum!): Float
  sum(field: NewRelicSdkApiFieldsEnum!): Float
  group(skip: Int, limit: Int, field: NewRelicSdkApiFieldsEnum!): [NewRelicSdkApiGroupConnection!]!
  field: String!
  fieldValue: String
}

input NewRelicSdkApiFilterInput {
  constants: NewRelicSdkConstantFilterListInput
  examples: NewRelicSdkExampleFilterListInput
  typeDefs: NewRelicSdkTypeDefinitionFilterListInput
  methods: NewRelicSdkMethodFilterListInput
  name: StringQueryOperatorInput
  usage: StringQueryOperatorInput
  description: StringQueryOperatorInput
  fields: NewRelicSdkApiFieldsFilterInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input NewRelicSdkApiSortInput {
  fields: [NewRelicSdkApiFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type NewRelicSdk {
  version: String!
  assets: NewRelicSdkAssets!
}

type NewRelicSdkAssets {
  js: String!
  css: String!
}
